{"version":3,"file":"xviz-data.js","names":["getDataContainer","parseBinaryXVIZ","isGLBXVIZ","isJSONString","isPBEXVIZ","getXVIZMessageType","XVIZMessage","TextDecoder","XVIZ_FORMAT","XVIZData","data","opts","_data","_opts","_dataFormat","undefined","_xvizType","_message","_determineFormat","Error","type","rawType","messageType","parts","split","namespace","msg","BINARY_GLB","Buffer","buffer","slice","byteOffset","byteLength","BINARY_PBE","JSON_BUFFER","jsonString","toString","ArrayBuffer","isView","Uint8Array","decode","JSON","parse","JSON_STRING","OBJECT","xvizMsg","messageFormat"],"sources":["../../../src/common/xviz-data.js"],"sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/* global Buffer */\n/* eslint-disable complexity */\nimport {\n  getDataContainer,\n  parseBinaryXVIZ,\n  isGLBXVIZ,\n  isJSONString,\n  isPBEXVIZ,\n  getXVIZMessageType\n} from './loaders';\nimport {XVIZMessage} from './xviz-message';\nimport {TextDecoder} from './text-encoding';\nimport {XVIZ_FORMAT} from './constants';\n\n// Represents raw xviz data and\n// can create an XVIZMessage\n//\n// Assume isXVIZMessage has been called\n//\n// Raw data formats supported:\n// - JSON string\n// - arraybuffer which is a JSON string\n// - JSON object\n// - arraybuffer which is a GLB\n// opts.messageType is the message type contained in data.\n// - If supplied it assume data does not have an Envelope.\n// - Can be one of ('xviz/state_update', 'xviz/metadata', etc.)\nexport class XVIZData {\n  constructor(data, opts = {}) {\n    this._data = data;\n    this._opts = opts;\n\n    // _dataFormat is an XVIZ_FORMAT for 'data'\n    this._dataFormat = undefined;\n\n    // _xvizType is the XVIZ Envelope 'type'\n    this._xvizType = undefined;\n\n    // _message is an XVIZMessage and has been fully parsed\n    this._message = undefined;\n\n    this._determineFormat();\n\n    if (!this._dataFormat) {\n      throw new Error('Unknown XVIZ data format');\n    }\n  }\n\n  get buffer() {\n    return this._data;\n  }\n\n  get format() {\n    return this._dataFormat;\n  }\n\n  // In some cases this can be as expensive as a parse, so we do not\n  // load this unless asked for explicitly.\n  get type() {\n    if (this._message) {\n      return this._message.type;\n    } else if (!this._xvizType) {\n      const rawType = this._opts.messageType || getXVIZMessageType(this._data);\n      if (rawType) {\n        const parts = rawType.split('/');\n        this._xvizType = {\n          namespace: parts[0],\n          type: parts[1]\n        };\n      }\n    }\n\n    return this._xvizType.type;\n  }\n\n  hasMessage() {\n    return this._message !== undefined;\n  }\n\n  // converts data to JS object\n  message() {\n    let msg = null;\n    if (this._message) {\n      return this._message;\n    }\n\n    let data = this._data;\n    switch (this._dataFormat) {\n      case XVIZ_FORMAT.BINARY_GLB:\n        if (data instanceof Buffer) {\n          data = data.buffer.slice(data.byteOffset, data.byteOffset + data.byteLength);\n        }\n        msg = parseBinaryXVIZ(data);\n        break;\n      case XVIZ_FORMAT.BINARY_PBE:\n        if (data instanceof Buffer) {\n          data = data.buffer.slice(data.byteOffset, data.byteOffset + data.byteLength);\n        }\n        msg = parseBinaryXVIZ(data, this._opts);\n        break;\n      case XVIZ_FORMAT.JSON_BUFFER:\n        let jsonString = null;\n        if (data instanceof Buffer) {\n          // Default to utf8 encoding\n          jsonString = data.toString();\n        } else if (data instanceof ArrayBuffer || ArrayBuffer.isView(data)) {\n          data = new Uint8Array(data);\n\n          // This is slow\n          jsonString = new TextDecoder('utf8').decode(data);\n        }\n\n        msg = JSON.parse(jsonString);\n        break;\n      case XVIZ_FORMAT.JSON_STRING:\n        msg = JSON.parse(data);\n        break;\n      case XVIZ_FORMAT.OBJECT:\n        msg = data;\n        break;\n      default:\n        throw new Error(`Unsupported format ${this._dataFormat}`);\n    }\n\n    const xvizMsg = new XVIZMessage(msg);\n    if (xvizMsg.data) {\n      this._message = xvizMsg;\n      return this._message;\n    }\n\n    return null;\n  }\n\n  _determineFormat() {\n    const {messageFormat} = this._opts;\n    if (messageFormat) {\n      this._dataFormat = messageFormat;\n      return;\n    }\n\n    let data = this._data;\n    switch (getDataContainer(data)) {\n      case 'binary':\n        if (data instanceof Buffer) {\n          data = data.buffer.slice(data.byteOffset, data.byteOffset + data.byteLength);\n        }\n\n        if (isPBEXVIZ(data)) {\n          this._dataFormat = XVIZ_FORMAT.BINARY_PBE;\n        } else if (isGLBXVIZ(data)) {\n          this._dataFormat = XVIZ_FORMAT.BINARY_GLB;\n        } else {\n          if (data instanceof ArrayBuffer) {\n            data = new Uint8Array(data);\n          }\n\n          if (isJSONString(data)) {\n            this._dataFormat = XVIZ_FORMAT.JSON_BUFFER;\n          }\n        }\n        break;\n      case 'string':\n        if (isJSONString(data)) {\n          this._dataFormat = XVIZ_FORMAT.JSON_STRING;\n        }\n        break;\n      case 'object':\n        this._dataFormat = XVIZ_FORMAT.OBJECT;\n        break;\n\n      default:\n    }\n  }\n}\n"],"mappings":"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"}