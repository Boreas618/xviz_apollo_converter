{"version":3,"file":"xviz-message.js","names":["isEnvelope","unpackEnvelope","XVIZ_MESSAGE_TYPE","XVIZ_MESSAGE_NAMESPACE","XVIZMessage","message","_message","_setupTypeData","type","data","msg","namespace","version","METADATA","update_type","updates","STATE_UPDATE"],"sources":["../../../src/common/xviz-message.js"],"sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport {isEnvelope, unpackEnvelope} from './loaders';\nimport {XVIZ_MESSAGE_TYPE} from './xviz-message-type';\nimport {XVIZ_MESSAGE_NAMESPACE} from './constants';\n\n// Represents an actual XVIZ Message\n//\n// Intention is to provide dual data management\n// of the XVIZ data.\n//\n// If data should is passed through untouched, then\n// it can be done.\n//\n// If data needs to be changed, it needs to be\n// instantiated by calling `message()`.\n//\n// Care must be taken when serializing\n// to use the `message()` result\nexport class XVIZMessage {\n  constructor(message) {\n    this.message = message;\n    this._message = null;\n\n    this._setupTypeData();\n  }\n\n  get type() {\n    if (this._message) {\n      return this._message.type;\n    }\n    return null;\n  }\n\n  get data() {\n    if (this._message) {\n      return this._message.data;\n    }\n    return null;\n  }\n\n  _setupTypeData() {\n    if (isEnvelope(this.message)) {\n      const msg = unpackEnvelope(this.message);\n\n      // If the message is not an XVIZ message, ignore\n      if (msg.namespace === 'xviz') {\n        this._message = msg;\n      }\n      return;\n    }\n\n    // XVIZv1 Support: Raw data, detect by inspection\n    if (this.message.version) {\n      this._message = {\n        namespace: XVIZ_MESSAGE_NAMESPACE,\n        type: XVIZ_MESSAGE_TYPE.METADATA,\n        data: this.message\n      };\n    } else if (this.message.update_type && this.message.updates) {\n      this._message = {\n        namespace: XVIZ_MESSAGE_NAMESPACE,\n        type: XVIZ_MESSAGE_TYPE.STATE_UPDATE,\n        data: this.message\n      };\n    } else {\n      this._message = {\n        namespace: null,\n        type: null,\n        data: this.message\n      };\n    }\n  }\n}\n"],"mappings":";;AAaA,SAAQA,UAAR,EAAoBC,cAApB,QAAyC,WAAzC;AACA,SAAQC,iBAAR,QAAgC,qBAAhC;AACA,SAAQC,sBAAR,QAAqC,aAArC;AAeA,WAAaC,WAAb;EACE,qBAAYC,OAAZ,EAAqB;IAAA;;IACnB,KAAKA,OAAL,GAAeA,OAAf;IACA,KAAKC,QAAL,GAAgB,IAAhB;;IAEA,KAAKC,cAAL;EACD;;EANH;IAAA;IAAA,KAQE,eAAW;MACT,IAAI,KAAKD,QAAT,EAAmB;QACjB,OAAO,KAAKA,QAAL,CAAcE,IAArB;MACD;;MACD,OAAO,IAAP;IACD;EAbH;IAAA;IAAA,KAeE,eAAW;MACT,IAAI,KAAKF,QAAT,EAAmB;QACjB,OAAO,KAAKA,QAAL,CAAcG,IAArB;MACD;;MACD,OAAO,IAAP;IACD;EApBH;IAAA;IAAA,OAsBE,0BAAiB;MACf,IAAIT,UAAU,CAAC,KAAKK,OAAN,CAAd,EAA8B;QAC5B,IAAMK,GAAG,GAAGT,cAAc,CAAC,KAAKI,OAAN,CAA1B;;QAGA,IAAIK,GAAG,CAACC,SAAJ,KAAkB,MAAtB,EAA8B;UAC5B,KAAKL,QAAL,GAAgBI,GAAhB;QACD;;QACD;MACD;;MAGD,IAAI,KAAKL,OAAL,CAAaO,OAAjB,EAA0B;QACxB,KAAKN,QAAL,GAAgB;UACdK,SAAS,EAAER,sBADG;UAEdK,IAAI,EAAEN,iBAAiB,CAACW,QAFV;UAGdJ,IAAI,EAAE,KAAKJ;QAHG,CAAhB;MAKD,CAND,MAMO,IAAI,KAAKA,OAAL,CAAaS,WAAb,IAA4B,KAAKT,OAAL,CAAaU,OAA7C,EAAsD;QAC3D,KAAKT,QAAL,GAAgB;UACdK,SAAS,EAAER,sBADG;UAEdK,IAAI,EAAEN,iBAAiB,CAACc,YAFV;UAGdP,IAAI,EAAE,KAAKJ;QAHG,CAAhB;MAKD,CANM,MAMA;QACL,KAAKC,QAAL,GAAgB;UACdK,SAAS,EAAE,IADG;UAEdH,IAAI,EAAE,IAFQ;UAGdC,IAAI,EAAE,KAAKJ;QAHG,CAAhB;MAKD;IACF;EArDH;;EAAA;AAAA"}