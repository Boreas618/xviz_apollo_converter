{"version":3,"file":"gltf-parser.js","names":["fetchFile","getFullUri","getGLTFAccessors","getGLTFAccessor","KHR_DRACO_MESH_COMPRESSION","UBER_POINT_CLOUD_EXTENSION","GLBParser","GLTFPostProcessorOld","DEFAULT_OPTIONS","fetchLinkedResources","fetch","decompress","DracoLoader","postProcess","createImages","log","console","GLTFParser","gltf","options","Object","assign","parseSync","_loadLinkedAssets","_decompressMeshes","postProcessor","glbParser","ArrayBuffer","isGLB","textDecoder","TextDecoder","decode","JSON","parse","json","key","getApplicationData","extras","extensionName","isExtension","getUsedExtensions","find","name","extensions","isRequired","getRequiredExtensions","getExtension","extensionsRequired","extensionsUsed","index","_get","array","object","warn","Promise","all","buffers","map","buffer","_loadBuffer","uri","window","response","arrayBuffer","data","meshes","mesh","primitives","primitive","_decompressKhronosDracoPrimitive","_decompressUberDracoPrimitive","attributes","keys","length","Error","_removeExtension","compressedMesh","_getBufferViewArray","bufferView","decodedData","indices","mode","bufferViewIndex","bufferViews","getBufferView","byteOffset","Uint8Array","byteLength","_removeStringFromArray","string","found","indexOf","splice"],"sources":["../../../src/gltf/gltf-parser.js"],"sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/* global window, TextDecoder */\nimport '../common/text-encoding';\nimport {fetchFile} from '@loaders.gl/core';\nimport {getFullUri} from './gltf-utils/gltf-utils';\nimport {getGLTFAccessors, getGLTFAccessor} from './gltf-utils/gltf-attribute-utils';\nimport {KHR_DRACO_MESH_COMPRESSION, UBER_POINT_CLOUD_EXTENSION} from './gltf-constants';\nimport GLBParser from './glb-parser';\nimport GLTFPostProcessorOld from './gltf-post-processor-old';\n\nconst DEFAULT_OPTIONS = {\n  fetchLinkedResources: true, // Fetch any linked .BIN buffers, decode base64\n  fetch: fetchFile,\n  decompress: false, // Decompress Draco compressed meshes (if DracoLoader available)\n  DracoLoader: null,\n  postProcess: true,\n  createImages: false, // Create image objects\n  log: console // eslint-disable-line\n};\n\nexport class GLTFParser {\n  async parse(gltf, options = {}) {\n    options = Object.assign({}, DEFAULT_OPTIONS, options);\n\n    // Postpone decompressing/postprocessing to make sure we load any linked files first\n    // TODO - is this really needed?\n    this.parseSync(gltf, {...options, postProcess: false, decompress: false});\n\n    // Load linked buffers asynchronously and decodes base64 buffers in parallel\n    if (options.fetchLinkedResources) {\n      await this._loadLinkedAssets(options);\n    }\n\n    if (options.decompress) {\n      this._decompressMeshes(options);\n    }\n\n    if (options.postProcess) {\n      const postProcessor = new GLTFPostProcessorOld();\n      postProcessor.postProcess(this.gltf, this.glbParser, options);\n    }\n\n    return this.gltf;\n  }\n\n  // NOTE: The sync parser cannot handle linked assets or base64 encoded resources\n  // gtlf - input can be arrayBuffer (GLB or UTF8 encoded JSON), string (JSON), or parsed JSON.\n  parseSync(gltf, options = {}) {\n    options = Object.assign({}, DEFAULT_OPTIONS, options);\n\n    // If binary is not starting with magic bytes, convert to string\n    if (gltf instanceof ArrayBuffer && !GLBParser.isGLB(gltf, options)) {\n      const textDecoder = new TextDecoder();\n      gltf = textDecoder.decode(gltf);\n    }\n\n    // If string, try to parse as JSON\n    if (typeof gltf === 'string') {\n      gltf = JSON.parse(gltf);\n    }\n\n    if (gltf instanceof ArrayBuffer) {\n      // Extract JSON from the GLB container\n      this.glbParser = new GLBParser();\n      this.gltf = this.glbParser.parseSync(gltf).json;\n      this.json = this.gltf;\n    } else {\n      this.glbParser = null;\n      this.gltf = gltf;\n      this.json = gltf;\n    }\n\n    // TODO: we could handle base64 encoded files in the non-async path\n    // await this._loadBuffersSync(options);\n\n    // TODO: we could synchronously decode base64 encoded URIs in the non-async path\n    // await this._loadLinkedAssetsSync(options);\n\n    if (options.decompress) {\n      this._decompressMeshes(options);\n    }\n\n    if (options.postProcess) {\n      const postProcessor = new GLTFPostProcessorOld();\n      postProcessor.postProcess(this.gltf, this.glbParser, options);\n    }\n\n    return this.gltf;\n  }\n\n  // Accessors\n\n  getApplicationData(key) {\n    if (this.json) {\n      return this.json[key];\n    } else if (this.glbParser) {\n      return this.glbParser.getApplicationData(key);\n    }\n\n    return null;\n  }\n\n  getExtraData(key) {\n    // TODO - Data is already unpacked by GLBParser\n    const extras = this.json.extras || {};\n    return extras[key];\n  }\n\n  getExtension(extensionName) {\n    const isExtension = this.getUsedExtensions().find(name => name === extensionName);\n    const extensions = this.json.extensions || {};\n    return isExtension ? extensions[extensionName] || true : null;\n  }\n\n  getRequiredExtension(extensionName) {\n    const isRequired = this.getRequiredExtensions().find(name => name === extensionName);\n    return isRequired ? this.getExtension(extensionName) : null;\n  }\n\n  getRequiredExtensions() {\n    return this.json.extensionsRequired || [];\n  }\n\n  getUsedExtensions() {\n    return this.json.extensionsUsed || [];\n  }\n\n  getScene(index) {\n    return this._get('scenes', index);\n  }\n\n  getNode(index) {\n    return this._get('nodes', index);\n  }\n\n  getSkin(index) {\n    return this._get('skins', index);\n  }\n\n  getMesh(index) {\n    return this._get('meshes', index);\n  }\n\n  getMaterial(index) {\n    return this._get('materials', index);\n  }\n\n  getAccessor(index) {\n    return this._get('accessors', index);\n  }\n\n  getCamera(index) {\n    return null; // TODO: fix this\n  }\n\n  getTexture(index) {\n    return this._get('textures', index);\n  }\n\n  getSampler(index) {\n    return this._get('samplers', index);\n  }\n\n  getImage(index) {\n    return this._get('images', index);\n  }\n\n  getBufferView(index) {\n    return this._get('bufferViews', index);\n  }\n\n  getBuffer(index) {\n    return this._get('buffers', index);\n  }\n\n  // PARSING HELPERS\n\n  _get(array, index) {\n    // check if already resolved\n    if (typeof index === 'object') {\n      return index;\n    }\n    const object = this.gltf[array] && this.gltf[array][index];\n    if (!object) {\n      console.warn(`glTF file error: Could not find ${array}[${index}]`); // eslint-disable-line\n    }\n    return object;\n  }\n\n  // PARSING HELPERS\n\n  // Load linked assets\n  async _loadLinkedAssets(options) {\n    return await Promise.all(this.gltf.buffers.map(buffer => this._loadBuffer(buffer, options)));\n  }\n\n  async _loadBuffer(buffer, options) {\n    // NOTE: options.uri is not correctly passed, however this class is deprecated...\n    if (buffer.uri && options.uri) {\n      const fetch = options.fetch || window.fetch;\n      const uri = getFullUri(buffer.uri, options.uri);\n      const response = await fetch(uri);\n      const arrayBuffer = await response.arrayBuffer();\n      buffer.data = arrayBuffer;\n      buffer.uri = null;\n    }\n  }\n\n  // POST PROCESSING\n\n  _decompressMeshes(options) {\n    // We have a \"soft dependency\" on Draco to avoid bundling it when not needed\n    // DracoEncoder needs to be imported and supplied by app\n    if (!options.DracoLoader || !options.decompress) {\n      return;\n    }\n\n    for (const mesh of this.gltf.meshes || []) {\n      // Decompress all the primitives in a mesh\n      for (const primitive of mesh.primitives) {\n        this._decompressKhronosDracoPrimitive(primitive, options);\n        this._decompressUberDracoPrimitive(primitive, options);\n        if (!primitive.attributes || Object.keys(primitive.attributes).length === 0) {\n          throw new Error('Empty glTF primitive: decompression failure?');\n        }\n      }\n    }\n\n    // We have now decompressed all primitives, we can remove the top-level extensions\n    this._removeExtension(KHR_DRACO_MESH_COMPRESSION);\n    this._removeExtension(UBER_POINT_CLOUD_EXTENSION);\n  }\n\n  // Unpacks one mesh primitive and removes the extension from the primitive\n  // TODO - Implement fallback behavior per KHR_DRACO_MESH_COMPRESSION spec\n  // TODO - Decompression could be threaded: Use DracoWorkerLoader?\n  //\n  // eslint-disable-next-line max-len\n  // https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_draco_mesh_compression\n  _decompressKhronosDracoPrimitive(primitive, options) {\n    const compressedMesh = primitive.extensions && primitive.extensions[KHR_DRACO_MESH_COMPRESSION];\n    if (!compressedMesh) {\n      return;\n    }\n\n    // Extension will be processed, delete it\n    delete primitive.extensions[KHR_DRACO_MESH_COMPRESSION];\n\n    const buffer = this._getBufferViewArray(compressedMesh.bufferView);\n    const decodedData = options.DracoLoader.parseSync(buffer);\n    primitive.attributes = getGLTFAccessors(decodedData.attributes);\n    if (decodedData.indices) {\n      primitive.indices = getGLTFAccessor(decodedData.indices);\n    }\n  }\n\n  // Unpacks one mesh primitive and removes the extension from the primitive\n  _decompressUberDracoPrimitive(primitive, options) {\n    const compressedMesh = primitive.extensions && primitive.extensions[UBER_POINT_CLOUD_EXTENSION];\n    if (!compressedMesh) {\n      return;\n    }\n\n    if (primitive.mode !== 0) {\n      throw new Error(UBER_POINT_CLOUD_EXTENSION);\n    }\n\n    // Extension will be processed, delete it\n    delete primitive.extensions[UBER_POINT_CLOUD_EXTENSION];\n\n    const buffer = this._getBufferViewArray(compressedMesh.bufferView);\n    const decodedData = options.DracoLoader.parseSync(buffer);\n    primitive.attributes = decodedData.attributes;\n  }\n\n  _getBufferViewArray(bufferViewIndex) {\n    const bufferView = this.gltf.bufferViews[bufferViewIndex];\n    if (this.glbParser) {\n      return this.glbParser.getBufferView(bufferView);\n    }\n\n    const buffer = this.gltf.buffers[bufferView.buffer].data;\n    const byteOffset = bufferView.byteOffset || 0;\n    return new Uint8Array(buffer, byteOffset, bufferView.byteLength);\n  }\n\n  // Removes an extension from the top-level list\n  _removeExtension(extensionName) {\n    if (this.json.extensionsRequired) {\n      this._removeStringFromArray(this.json.extensionsRequired, extensionName);\n    }\n    if (this.json.extensionsUsed) {\n      this._removeStringFromArray(this.json.extensionsUsed, extensionName);\n    }\n    if (this.json.extensions) {\n      delete this.json.extensions[extensionName];\n    }\n  }\n\n  _removeStringFromArray(array, string) {\n    let found = true;\n    while (found) {\n      const index = array.indexOf(string);\n      if (index > -1) {\n        array.splice(index, 1);\n      } else {\n        found = false;\n      }\n    }\n  }\n}\n"],"mappings":"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"}