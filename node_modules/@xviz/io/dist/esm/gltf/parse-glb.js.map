{"version":3,"file":"parse-glb.js","names":["assert","padTo4Bytes","MAGIC_glTF","GLB_FILE_HEADER_SIZE","GLB_CHUNK_HEADER_SIZE","GLB_CHUNK_TYPE_JSON","GLB_CHUNK_TYPE_BIN","LE","getMagicString","dataView","byteOffset","String","fromCharCode","getUint8","isGLB","arrayBuffer","options","DataView","magic","magic1","getUint32","parseGLBSync","glb","type","version","byteLength","header","console","warn","json","hasBinChunk","binChunks","parseGLBChunksSync","addDeprecatedFields","chunkLength","chunkFormat","parseJSONChunk","parseBINChunk","strict","jsonChunk","Uint8Array","buffer","textDecoder","TextDecoder","jsonText","decode","JSON","parse","push","length","binChunkByteOffset","binChunkLength"],"sources":["../../../src/gltf/parse-glb.js"],"sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/* global TextDecoder */\n/* eslint-disable camelcase, max-statements */\nimport '../common/text-encoding';\nimport {assert} from '@loaders.gl/loader-utils';\nimport {padTo4Bytes} from './memory-copy-utils';\n\nconst MAGIC_glTF = 0x676c5446; // glTF in Big-Endian ASCII\n\nconst GLB_FILE_HEADER_SIZE = 12;\nconst GLB_CHUNK_HEADER_SIZE = 8;\n\nconst GLB_CHUNK_TYPE_JSON = 0x4e4f534a;\nconst GLB_CHUNK_TYPE_BIN = 0x004e4942;\n\nconst LE = true; // Binary GLTF is little endian.\n\nfunction getMagicString(dataView, byteOffset = 0) {\n  return `\\\n${String.fromCharCode(dataView.getUint8(byteOffset + 0))}\\\n${String.fromCharCode(dataView.getUint8(byteOffset + 1))}\\\n${String.fromCharCode(dataView.getUint8(byteOffset + 2))}\\\n${String.fromCharCode(dataView.getUint8(byteOffset + 3))}`;\n}\n\n// Check if a data view is a GLB\nexport function isGLB(arrayBuffer, byteOffset = 0, options = {}) {\n  const dataView = new DataView(arrayBuffer);\n  // Check that GLB Header starts with the magic number\n  const {magic = MAGIC_glTF} = options;\n  const magic1 = dataView.getUint32(byteOffset, false);\n  return magic1 === magic || magic1 === MAGIC_glTF;\n}\n\n// https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#glb-file-format-specification\n\n// Compare with GLB loader documentation\n/*\nReturns {\n  header: {\n    type: string,\n    magic: number,\n    byteLength: number,\n    byteOffset: number\n  },\n\n  version: number,\n\n  // JSON Chunk\n  json: any,\n\n  // BIN Chunk\n  hasBinChunk: boolean,\n  binChunks: [{\n    arrayBuffer,\n    byteOffset,\n    byteLength\n  }],\n\n  // Deprecated (duplicates header)\n  type: string,\n  magic: number,\n  version: number,\n  byteLength: number,\n  byteOffset: number,\n  binChunkByteOffset: number,\n  binChunkLength: number\n}\n*/\n\nexport default function parseGLBSync(glb, arrayBuffer, byteOffset = 0, options = {}) {\n  // Check that GLB Header starts with the magic number\n  const dataView = new DataView(arrayBuffer);\n\n  glb.type = getMagicString(dataView, byteOffset + 0);\n  glb.version = dataView.getUint32(byteOffset + 4, LE); // Version 2 of binary glTF container format\n  const byteLength = dataView.getUint32(byteOffset + 8, LE); // Total byte length of generated file\n\n  // Less important stuff in a header\n  glb.header = {\n    byteOffset, // Byte offset into the initial arrayBuffer\n    byteLength\n  };\n\n  if (glb.type !== 'glTF') {\n    console.warn(`Invalid GLB magic string ${glb.type}`); // eslint-disable-line\n  }\n\n  assert(glb.version === 2, `Invalid GLB version ${glb.version}. Only .glb v2 supported`);\n  assert(glb.header.byteLength > GLB_FILE_HEADER_SIZE + GLB_CHUNK_HEADER_SIZE);\n\n  // Per spec we must iterate over chunks, ignoring all except JSON and BIN\n  glb.json = {};\n  glb.hasBinChunk = false;\n  glb.binChunks = [];\n\n  parseGLBChunksSync(glb, dataView, byteOffset + 12, options);\n\n  // DEPRECATED - duplicate header fields in root of returned object\n  addDeprecatedFields(glb);\n\n  return byteOffset + glb.header.byteLength;\n}\n\nfunction parseGLBChunksSync(glb, dataView, byteOffset, options) {\n  // Iterate as long as there is space left for another chunk header\n  while (byteOffset + 8 <= glb.header.byteLength) {\n    const chunkLength = dataView.getUint32(byteOffset + 0, LE); // Byte length of chunk\n    const chunkFormat = dataView.getUint32(byteOffset + 4, LE); // Chunk format as uint32\n    byteOffset += GLB_CHUNK_HEADER_SIZE;\n\n    // Per spec we must iterate over chunks, ignoring all except JSON and BIN\n    switch (chunkFormat) {\n      case GLB_CHUNK_TYPE_JSON:\n        parseJSONChunk(glb, dataView, byteOffset, chunkLength, options);\n        break;\n      case GLB_CHUNK_TYPE_BIN:\n        parseBINChunk(glb, dataView, byteOffset, chunkLength, options);\n        break;\n      default:\n        // Ignore, per spec\n        // console.warn(`Unknown GLB chunk type`); // eslint-disable-line\n        break;\n    }\n\n    // DEPRECATED - Backward compatibility for very old xviz files\n    switch (chunkFormat) {\n      case 0:\n        if (!options.strict) {\n          parseJSONChunk(glb, dataView, byteOffset, chunkLength, options);\n        }\n        break;\n      case 1:\n        if (!options.strict) {\n          parseBINChunk(glb, dataView, byteOffset, chunkLength, options);\n        }\n        break;\n      default:\n    }\n\n    byteOffset += padTo4Bytes(chunkLength);\n  }\n\n  return byteOffset;\n}\n\n// Parse a GLB JSON chunk\nfunction parseJSONChunk(glb, dataView, byteOffset, chunkLength, options) {\n  // 1. Create a \"view\" of the binary encoded JSON data inside the GLB\n  const jsonChunk = new Uint8Array(dataView.buffer, byteOffset, chunkLength);\n\n  // 2. Decode the JSON binary array into clear text\n  const textDecoder = new TextDecoder('utf8');\n  const jsonText = textDecoder.decode(jsonChunk);\n\n  // 3. Parse the JSON text into a JavaScript data structure\n  glb.json = JSON.parse(jsonText);\n}\n\n// Parse a GLB BIN chunk\nfunction parseBINChunk(glb, dataView, byteOffset, chunkLength, options) {\n  // Note: BIN chunk can be optional\n  glb.header.hasBinChunk = true;\n  glb.binChunks.push({\n    byteOffset,\n    byteLength: chunkLength,\n    arrayBuffer: dataView.buffer\n    // TODO - copy, or create typed array view?\n  });\n}\n\nfunction addDeprecatedFields(glb) {\n  glb.byteOffset = glb.header.byteOffset;\n  glb.magic = glb.header.magic;\n  glb.version = glb.header.version;\n  glb.byteLength = glb.header.byteLength;\n  glb.hasBinChunk = glb.binChunks.length >= 1;\n  glb.binChunkByteOffset = glb.header.hasBinChunk ? glb.binChunks[0].byteOffset : 0;\n  glb.binChunkLength = glb.header.hasBinChunk ? glb.binChunks[0].byteLength : 0;\n}\n"],"mappings":"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"}