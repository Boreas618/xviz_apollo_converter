{"version":3,"file":"glb-parser.js","names":["assert","parseGLBSync","isGLB","ATTRIBUTE_TYPE_TO_COMPONENTS","ATTRIBUTE_COMPONENT_TYPE_TO_BYTE_SIZE","ATTRIBUTE_COMPONENT_TYPE_TO_ARRAY","unpackBinaryJson","unpackGLTFBuffers","GLBParser","arrayBuffer","options","parseSync","glbArrayBuffer","binaryByteOffset","packedJson","json","byteOffset","binChunkByteOffset","unpackedBuffers","key","glTFBufferView","Uint8Array","byteLength","glTFAccessor","ArrayType","componentType","components","type","bytesPerComponent","length","count","bufferViews","bufferView","glTFImage","typedArray","getBufferView","mimeType","arrayBufferView","blob","Blob","urlCreator","self","URL","webkitURL","imageUrl","createObjectURL","img","Image","src","Promise","resolve","onload"],"sources":["../../../src/gltf/glb-parser.js"],"sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/* eslint-disable camelcase, max-statements, no-restricted-globals, no-redeclare */\nimport {assert} from './assert';\nimport parseGLBSync, {isGLB} from './parse-glb';\nimport {\n  ATTRIBUTE_TYPE_TO_COMPONENTS,\n  ATTRIBUTE_COMPONENT_TYPE_TO_BYTE_SIZE,\n  ATTRIBUTE_COMPONENT_TYPE_TO_ARRAY\n} from './gltf-utils/gltf-utils';\nimport unpackBinaryJson from './packed-json/unpack-binary-json';\nimport unpackGLTFBuffers from './packed-json/unpack-gltf-buffers';\n\nexport default class GLBParser {\n  static isGLB(arrayBuffer, options = {}) {\n    const byteOffset = 0;\n    return isGLB(arrayBuffer, byteOffset);\n  }\n\n  // Return the gltf JSON and the original arrayBuffer\n  parse(arrayBuffer, options = {}) {\n    return this.parseSync(arrayBuffer, options);\n  }\n\n  parseSync(arrayBuffer, options = {}) {\n    this.glbArrayBuffer = arrayBuffer;\n\n    this.binaryByteOffset = null;\n    this.packedJson = null;\n    this.json = null;\n\n    // Only parse once\n    if (this.json === null && this.binaryByteOffset === null) {\n      const byteOffset = 0;\n\n      // Populates the supplied object (`this`) with parsed data members.\n      parseGLBSync(this, this.glbArrayBuffer, byteOffset, options);\n\n      // Backwards compat\n      this.binaryByteOffset = this.binChunkByteOffset;\n\n      // Unpack binary JSON\n      this.packedJson = this.json;\n\n      const unpackedBuffers = unpackGLTFBuffers(\n        this.glbArrayBuffer,\n        this.json,\n        this.binaryByteOffset\n      );\n      this.json = unpackBinaryJson(this.json, unpackedBuffers);\n\n      this.unpackedBuffers = unpackedBuffers;\n    }\n\n    return this;\n  }\n\n  // Returns application JSON data stored in `key`\n  getApplicationData(key) {\n    if (this.json) {\n      return this.json[key];\n    }\n\n    return null;\n  }\n\n  // Returns JSON envelope\n  getJSON() {\n    return this.json;\n  }\n\n  // Return binary chunk\n  getArrayBuffer() {\n    return this.glbArrayBuffer;\n  }\n\n  // Return index into binary chunk\n  getBinaryByteOffset() {\n    return this.binaryByteOffset;\n  }\n\n  // Unpacks a bufferview into a new Uint8Array that is a view into the binary chunk\n  getBufferView(glTFBufferView) {\n    const byteOffset = (glTFBufferView.byteOffset || 0) + this.binaryByteOffset;\n    return new Uint8Array(this.glbArrayBuffer, byteOffset, glTFBufferView.byteLength);\n  }\n\n  // Unpacks a glTF accessor into a new typed array that is a view into the binary chunk\n  getBuffer(glTFAccessor) {\n    // Decode the glTF accessor format\n    const ArrayType = ATTRIBUTE_COMPONENT_TYPE_TO_ARRAY[glTFAccessor.componentType];\n    const components = ATTRIBUTE_TYPE_TO_COMPONENTS[glTFAccessor.type];\n    const bytesPerComponent = ATTRIBUTE_COMPONENT_TYPE_TO_BYTE_SIZE[glTFAccessor.componentType];\n    const length = glTFAccessor.count * components;\n    const byteLength = glTFAccessor.count * components * bytesPerComponent;\n\n    // Get the boundaries of the binary sub-chunk for this bufferView\n    const glTFBufferView = this.json.bufferViews[glTFAccessor.bufferView];\n    assert(byteLength >= 0 && glTFAccessor.byteOffset + byteLength <= glTFBufferView.byteLength);\n\n    const byteOffset = glTFBufferView.byteOffset + this.binaryByteOffset + glTFAccessor.byteOffset;\n    return new ArrayType(this.glbArrayBuffer, byteOffset, length);\n  }\n\n  // Unpacks an image into an HTML image\n  getImageData(glTFImage) {\n    return {\n      typedArray: this.getBufferView(glTFImage.bufferView),\n      mimeType: glTFImage.mimeType || 'image/jpeg'\n    };\n  }\n\n  getImage(glTFImage) {\n    /* global self, Blob, Image */\n    const arrayBufferView = this.getBufferView(glTFImage.bufferView);\n    const mimeType = glTFImage.mimeType || 'image/jpeg';\n    const blob = new Blob([arrayBufferView], {type: mimeType});\n    const urlCreator = self.URL || self.webkitURL;\n    const imageUrl = urlCreator.createObjectURL(blob);\n    const img = new Image();\n    img.src = imageUrl;\n    return img;\n  }\n\n  getImageAsync(glTFImage) {\n    /* global self, Blob, Image */\n    return new Promise(resolve => {\n      const arrayBufferView = this.getBufferView(glTFImage.bufferView);\n      const mimeType = glTFImage.mimeType || 'image/jpeg';\n      const blob = new Blob([arrayBufferView], {type: mimeType});\n      const urlCreator = self.URL || self.webkitURL;\n      const imageUrl = urlCreator.createObjectURL(blob);\n      const img = new Image();\n      img.onload = () => resolve(img);\n      img.src = imageUrl;\n    });\n  }\n}\n"],"mappings":"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"}