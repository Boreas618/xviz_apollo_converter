{"version":3,"file":"unpack-gltf-buffers.js","names":["assert","getAccessorArrayTypeAndLength","unpackGLBBuffers","arrayBuffer","json","binaryByteOffset","getArrayBufferAtOffset","bufferViews","i","length","bufferView","byteLength","accessors","unpackAccessors","images","unpackImages","accessorBuffers","accessor","ArrayType","array","byteOffset","push","imageBuffers","image","Uint8Array","imate","binaryBuffer","ArrayBuffer","sourceArray","binaryArray"],"sources":["../../../../src/gltf/packed-json/unpack-gltf-buffers.js"],"sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport {assert} from '../assert';\nimport {getAccessorArrayTypeAndLength} from '../gltf-utils/gltf-utils';\n\nexport default function unpackGLBBuffers(arrayBuffer, json, binaryByteOffset) {\n  // TODO - really inefficient, should just use the offset into the original array buffer\n  if (binaryByteOffset) {\n    arrayBuffer = getArrayBufferAtOffset(arrayBuffer, binaryByteOffset);\n  }\n\n  const bufferViews = json.bufferViews || [];\n\n  for (let i = 0; i < bufferViews.length; ++i) {\n    const bufferView = bufferViews[i];\n    assert(bufferView.byteLength >= 0);\n  }\n\n  return {\n    // TODO: delete unpackAccessors and use buffer views only?\n    accessors: unpackAccessors(arrayBuffer, bufferViews, json),\n    images: unpackImages(arrayBuffer, bufferViews, json)\n  };\n}\n\nfunction unpackAccessors(arrayBuffer, bufferViews, json) {\n  // unpack accessors\n  const accessors = json.accessors || [];\n\n  const accessorBuffers = [];\n\n  for (let i = 0; i < accessors.length; ++i) {\n    const accessor = accessors[i];\n    assert(accessor);\n\n    const bufferView = bufferViews[accessor.bufferView];\n    // Draco encoded meshes don't have bufferView in accessor\n    if (bufferView) {\n      // Create a new typed array as a view into the combined buffer\n      const {ArrayType, length} = getAccessorArrayTypeAndLength(accessor, bufferView);\n      const array = new ArrayType(arrayBuffer, bufferView.byteOffset, length);\n      // Store the metadata on the array (e.g. needed to determine number of components per element)\n      array.accessor = accessor;\n      accessorBuffers.push(array);\n    }\n  }\n\n  return accessorBuffers;\n}\n\nfunction unpackImages(arrayBuffer, bufferViews, json) {\n  // unpack images\n  const images = json.images || [];\n\n  const imageBuffers = [];\n\n  for (let i = 0; i < images.length; ++i) {\n    const image = images[i];\n    assert(image);\n\n    const bufferView = bufferViews[image.bufferView];\n    assert(bufferView);\n\n    // Create a new typed array as a view into the combined buffer\n    const array = new Uint8Array(arrayBuffer, bufferView.byteOffset, bufferView.byteLength);\n    // Store the metadata on the array (e.g. needed to determine number of components per element)\n    array.imate = image;\n    imageBuffers.push(array);\n  }\n\n  return imageBuffers;\n}\n\n// Helper methods\n\n// json.accessors = json.accessors || [];\n// json.bufferViews = json.bufferViews || [];\n\n// Creates a new ArrayBuffer starting at the offset, containing all remaining bytes\n// TODO - should not be needed, see above\nfunction getArrayBufferAtOffset(arrayBuffer, byteOffset) {\n  const length = arrayBuffer.byteLength - byteOffset;\n  const binaryBuffer = new ArrayBuffer(length);\n  const sourceArray = new Uint8Array(arrayBuffer);\n  const binaryArray = new Uint8Array(binaryBuffer);\n  for (let i = 0; i < length; i++) {\n    binaryArray[i] = sourceArray[byteOffset + i];\n  }\n  return binaryBuffer;\n}\n"],"mappings":"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"}