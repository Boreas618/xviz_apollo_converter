{"version":3,"file":"glb-builder.js","names":["copyToArray","isImage","getAccessorTypeFromSize","getComponentTypeFromArray","padTo4Bytes","encodeGLBSync","packBinaryJson","GLBBuilder","constructor","options","byteLength","json","buffers","bufferViews","accessors","images","meshes","sourceBuffers","log","console","getByteLength","imageData","encodeSync","encodeAsGLB","_packBinaryChunk","magic","warn","glb","version","binary","arrayBuffer","glbArrayBuffer","ArrayBuffer","dataView","DataView","addApplicationData","key","data","packOptions","jsonData","nopack","addBuffer","sourceBuffer","accessor","size","bufferViewIndex","addBufferView","accessorDefaults","componentType","count","Math","round","length","addAccessor","Object","assign","buffer","push","byteOffset","bufferView","type","_pack","totalByteLength","targetArray","Uint8Array","dstByteOffset","i","_getInternalCounts"],"sources":["../../../src/gltf/glb-builder.js"],"sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/* eslint-disable camelcase, max-statements */\nimport {copyToArray} from '@loaders.gl/loader-utils';\nimport {isImage} from '@loaders.gl/images';\nimport {getAccessorTypeFromSize, getComponentTypeFromArray} from './gltf-utils/gltf-utils';\nimport {padTo4Bytes} from './memory-copy-utils';\nimport encodeGLBSync from './encode-glb';\nimport {packBinaryJson} from '../writers/xviz-pack-binary';\n\nexport default class GLBBuilder {\n  constructor(options = {}) {\n    // Lets us keep track of how large the body will be, as well as the offset for each of the\n    // original buffers.\n    this.byteLength = 0;\n\n    this.json = {\n      buffers: [\n        {\n          // Just the single BIN chunk buffer\n          byteLength: 0 // Updated at end of conversion\n        }\n      ],\n      bufferViews: [],\n      accessors: [],\n      images: [],\n      meshes: []\n    };\n\n    // list of binary buffers to be written to the BIN chunk\n    // (Each call to addBuffer, addImage etc adds an entry here)\n    this.sourceBuffers = [];\n\n    this.log = options.log || console; // eslint-disable-line\n  }\n\n  // ACCESSORS\n\n  getByteLength() {\n    return this.byteLength;\n  }\n\n  // Checks if a binary buffer is a recognized image format (PNG, JPG, GIF, ...)\n  isImage(imageData) {\n    return isImage(imageData);\n  }\n\n  // MODIFERS\n  encodeSync(options = {}) {\n    return this.encodeAsGLB(options);\n  }\n\n  // Encode the full glTF file as a binary GLB file\n  // Returns an ArrayBuffer that represents the complete GLB image that can be saved to file\n  // Encode the full GLB buffer with header etc\n  // https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#\n  // glb-file-format-specification\n  encodeAsGLB(options = {}) {\n    // TODO - avoid double array buffer creation\n    this._packBinaryChunk();\n\n    if (options.magic) {\n      console.warn('Custom glTF magic number no longer supported'); // eslint-disable-line\n    }\n\n    const glb = {\n      version: 2,\n      json: this.json,\n      binary: this.arrayBuffer\n    };\n\n    // Calculate length and allocate buffer\n    const byteLength = encodeGLBSync(glb, null, 0, options);\n    const glbArrayBuffer = new ArrayBuffer(byteLength);\n\n    // Encode into buffer\n    const dataView = new DataView(glbArrayBuffer);\n    encodeGLBSync(glb, dataView, 0, options);\n\n    return glbArrayBuffer;\n  }\n\n  // Add an extra application-defined key to the top-level data structure\n  // By default packs JSON by extracting binary data and replacing it with JSON pointers\n  addApplicationData(key, data, packOptions = {}) {\n    const jsonData = packOptions.nopack ? data : packBinaryJson(data, this, null, packOptions);\n    this.json[key] = jsonData;\n    return this;\n  }\n\n  // Add a binary buffer. Builds glTF \"JSON metadata\" and saves buffer reference\n  // Buffer will be copied into BIN chunk during \"pack\"\n  // Currently encodes buffers as glTF accessors, but this could be optimized\n  addBuffer(sourceBuffer, accessor = {size: 3}) {\n    const bufferViewIndex = this.addBufferView(sourceBuffer);\n\n    const accessorDefaults = {\n      size: accessor.size,\n      componentType: getComponentTypeFromArray(sourceBuffer),\n      count: Math.round(sourceBuffer.length / accessor.size)\n    };\n\n    return this.addAccessor(bufferViewIndex, Object.assign(accessorDefaults, accessor));\n  }\n\n  // Basic glTF adders: basic memory buffer/image type fields\n  // Scenegraph specific adders are placed in glTFBuilder\n  // TODO: These should be moved to glTFBuilder once addBuffer\n  // have been rewritten to not depend on these.\n\n  // Add one untyped source buffer, create a matching glTF `bufferView`, and return its index\n  addBufferView(buffer) {\n    const byteLength = buffer.byteLength || buffer.length;\n\n    // Add a bufferView indicating start and length of this binary sub-chunk\n    this.json.bufferViews.push({\n      buffer: 0,\n      // Write offset from the start of the binary body\n      byteOffset: this.byteLength,\n      byteLength\n    });\n\n    // We've now written the contents to the body, so update the total length\n    // Every sub-chunk needs to be 4-byte aligned\n    this.byteLength += padTo4Bytes(byteLength);\n\n    // Add this buffer to the list of buffers to be written to the body.\n    this.sourceBuffers.push(buffer);\n\n    // Return the index to the just created bufferView\n    return this.json.bufferViews.length - 1;\n  }\n\n  // Adds an accessor to a bufferView\n  addAccessor(bufferViewIndex, accessor) {\n    // Add an accessor pointing to the new buffer view\n    this.json.accessors.push({\n      bufferView: bufferViewIndex,\n      type: getAccessorTypeFromSize(accessor.size),\n      componentType: accessor.componentType,\n      count: accessor.count\n    });\n\n    return this.json.accessors.length - 1;\n  }\n\n  // PRIVATE\n\n  // For testing\n  _pack() {\n    this._packBinaryChunk();\n    return {arrayBuffer: this.arrayBuffer, json: this.json};\n  }\n\n  // Pack the binary chunk\n  _packBinaryChunk() {\n    // Already packed\n    if (this.arrayBuffer) {\n      return;\n    }\n\n    // Allocate total array\n    const totalByteLength = this.byteLength;\n    const arrayBuffer = new ArrayBuffer(totalByteLength);\n    const targetArray = new Uint8Array(arrayBuffer);\n\n    // Copy each array into\n    let dstByteOffset = 0;\n    for (let i = 0; i < this.sourceBuffers.length; i++) {\n      const sourceBuffer = this.sourceBuffers[i];\n      dstByteOffset = copyToArray(sourceBuffer, targetArray, dstByteOffset);\n    }\n\n    // Update the glTF BIN CHUNK byte length\n    this.json.buffers[0].byteLength = totalByteLength;\n\n    // Save generated arrayBuffer\n    this.arrayBuffer = arrayBuffer;\n\n    // Clear out sourceBuffers\n    this.sourceBuffers = [];\n  }\n\n  // Report internal buffer sizes for debug and testing purposes\n  _getInternalCounts() {\n    return {\n      buffers: this.json.buffers.length,\n      bufferViews: this.json.bufferViews.length,\n      accessors: this.json.accessors.length,\n      images: this.json.images.length\n    };\n  }\n}\n"],"mappings":"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"}