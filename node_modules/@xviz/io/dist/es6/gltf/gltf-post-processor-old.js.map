{"version":3,"file":"gltf-post-processor-old.js","names":["getFullUri","COMPONENTS","SCALAR","VEC2","VEC3","VEC4","MAT2","MAT3","MAT4","BYTES","GL_SAMPLER","TEXTURE_MAG_FILTER","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","TEXTURE_WRAP_T","REPEAT","LINEAR","NEAREST_MIPMAP_LINEAR","SAMPLER_PARAMETER_GLTF_TO_GL","magFilter","minFilter","wrapS","wrapT","DEFAULT_SAMPLER","TEXTURE_WRAP_","getBytesFromComponentType","componentType","getSizeFromAccessorType","type","GLTFPostProcessorOld","postProcess","gltf","glbParser","options","_resolveToTree","bufferViews","forEach","bufView","i","_resolveBufferView","images","image","_resolveImage","samplers","sampler","_resolveSampler","textures","texture","_resolveTexture","accessors","accessor","_resolveAccessor","materials","material","_resolveMaterial","meshes","mesh","_resolveMesh","nodes","node","_resolveNode","skins","skin","_resolveSkin","scenes","scene","_resolveScene","undefined","_process_extension_KHR_lights_punctual","getScene","index","_get","getNode","getSkin","getMesh","getMaterial","getAccessor","getCamera","getTexture","getSampler","getImage","getBufferView","getBuffer","array","object","console","warn","id","map","children","child","camera","inverseBindMatrices","primitive","primitives","attribute","attributes","indices","normalTexture","occlusionTexture","emissiveTexture","pbrMetallicRoughness","mr","baseColorTexture","metallicRoughnessTexture","bufferView","bytesPerComponent","components","bytesPerElement","source","parameters","key","glEnum","_enumSamplerParameter","createImages","getImageAsync","uri","Promise","resolve","img","Image","crossOrigin","onload","src","buffer","data","byteOffset","Uint8Array","byteLength","_resolveCamera","perspective","orthographic","extension","extensions","KHR_lights_punctual","lights","_removeExtension","nodeExtension","light","extensionName","extensionsRequired","_removeStringFromArray","extensionsUsed","string","found","indexOf","splice"],"sources":["../../../src/gltf/gltf-post-processor-old.js"],"sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport {getFullUri} from './gltf-utils/gltf-utils';\n\n// This is a post processor for loaded glTF files\n// The goal is to make the loaded data easier to use in WebGL applications\n//\n// Functions:\n// * Resolve indexed arrays structure of glTF into a linked tree.\n// * Translate stringified enum keys and values into WebGL constants.\n// * Load images (optional)\n\n// ENUM LOOKUP\n\nconst COMPONENTS = {\n  SCALAR: 1,\n  VEC2: 2,\n  VEC3: 3,\n  VEC4: 4,\n  MAT2: 4,\n  MAT3: 9,\n  MAT4: 16\n};\n\nconst BYTES = {\n  5120: 1, // BYTE\n  5121: 1, // UNSIGNED_BYTE\n  5122: 2, // SHORT\n  5123: 2, // UNSIGNED_SHORT\n  5125: 4, // UNSIGNED_INT\n  5126: 4 // FLOAT\n};\n\nconst GL_SAMPLER = {\n  // Sampler parameters\n  TEXTURE_MAG_FILTER: 0x2800,\n  TEXTURE_MIN_FILTER: 0x2801,\n  TEXTURE_WRAP_S: 0x2802,\n  TEXTURE_WRAP_T: 0x2803,\n\n  // Sampler default values\n  REPEAT: 0x2901,\n  LINEAR: 0x2601,\n  NEAREST_MIPMAP_LINEAR: 0x2702\n};\n\nconst SAMPLER_PARAMETER_GLTF_TO_GL = {\n  magFilter: GL_SAMPLER.TEXTURE_MAG_FILTER,\n  minFilter: GL_SAMPLER.TEXTURE_MIN_FILTER,\n  wrapS: GL_SAMPLER.TEXTURE_WRAP_S,\n  wrapT: GL_SAMPLER.TEXTURE_WRAP_T\n};\n\n// When undefined, a sampler with repeat wrapping and auto filtering should be used.\n// https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#texture\nconst DEFAULT_SAMPLER = {\n  [GL_SAMPLER.TEXTURE_MAG_FILTER]: GL_SAMPLER.LINEAR,\n  [GL_SAMPLER.TEXTURE_MIN_FILTER]: GL_SAMPLER.NEAREST_MIPMAP_LINEAR,\n  [GL_SAMPLER.TEXTURE_WRAP_S]: GL_SAMPLER.REPEAT,\n  [GL_SAMPLER.TEXTURE_WRAP_]: GL_SAMPLER.REPEAT\n};\n\nfunction getBytesFromComponentType(componentType) {\n  return BYTES[componentType];\n}\n\nfunction getSizeFromAccessorType(type) {\n  return COMPONENTS[type];\n}\n\nexport default class GLTFPostProcessorOld {\n  postProcess(gltf, glbParser, options = {}) {\n    this.gltf = gltf;\n    this.glbParser = glbParser;\n\n    this._resolveToTree(options);\n    return this.gltf;\n  }\n\n  // Convert indexed glTF structure into tree structure\n  // PREPARATION STEP: CROSS-LINK INDEX RESOLUTION, ENUM LOOKUP, CONVENIENCE CALCULATIONS\n  /* eslint-disable complexity */\n  _resolveToTree(options = {}) {\n    const {gltf} = this;\n\n    (gltf.bufferViews || []).forEach((bufView, i) => this._resolveBufferView(bufView, i));\n\n    (gltf.images || []).forEach((image, i) => this._resolveImage(image, i, options));\n    (gltf.samplers || []).forEach((sampler, i) => this._resolveSampler(sampler, i));\n    (gltf.textures || []).forEach((texture, i) => this._resolveTexture(texture, i));\n\n    (gltf.accessors || []).forEach((accessor, i) => this._resolveAccessor(accessor, i));\n    (gltf.materials || []).forEach((material, i) => this._resolveMaterial(material, i));\n    (gltf.meshes || []).forEach((mesh, i) => this._resolveMesh(mesh, i));\n\n    (gltf.nodes || []).forEach((node, i) => this._resolveNode(node, i));\n\n    (gltf.skins || []).forEach((skin, i) => this._resolveSkin(skin, i));\n\n    (gltf.scenes || []).forEach((scene, i) => this._resolveScene(scene, i));\n\n    if (gltf.scene !== undefined) {\n      gltf.scene = gltf.scenes[this.gltf.scene];\n    }\n\n    // EXTENSIONS\n    this._process_extension_KHR_lights_punctual();\n\n    return gltf;\n  }\n  /* eslint-enable complexity */\n\n  getScene(index) {\n    return this._get('scenes', index);\n  }\n\n  getNode(index) {\n    return this._get('nodes', index);\n  }\n\n  getSkin(index) {\n    return this._get('skins', index);\n  }\n\n  getMesh(index) {\n    return this._get('meshes', index);\n  }\n\n  getMaterial(index) {\n    return this._get('materials', index);\n  }\n\n  getAccessor(index) {\n    return this._get('accessors', index);\n  }\n\n  getCamera(index) {\n    return null; // TODO: fix this\n  }\n\n  getTexture(index) {\n    return this._get('textures', index);\n  }\n\n  getSampler(index) {\n    return this._get('samplers', index);\n  }\n\n  getImage(index) {\n    return this._get('images', index);\n  }\n\n  getBufferView(index) {\n    return this._get('bufferViews', index);\n  }\n\n  getBuffer(index) {\n    return this._get('buffers', index);\n  }\n\n  _get(array, index) {\n    // check if already resolved\n    if (typeof index === 'object') {\n      return index;\n    }\n    const object = this.gltf[array] && this.gltf[array][index];\n    if (!object) {\n      console.warn(`glTF file error: Could not find ${array}[${index}]`); // eslint-disable-line\n    }\n    return object;\n  }\n\n  // PARSING HELPERS\n\n  _resolveScene(scene, index) {\n    scene.id = `scene-${index}`;\n    scene.nodes = (scene.nodes || []).map(node => this.getNode(node));\n  }\n\n  _resolveNode(node, index) {\n    node.id = `node-${index}`;\n    node.children = (node.children || []).map(child => this.getNode(child));\n    if (node.mesh !== undefined) {\n      node.mesh = this.getMesh(node.mesh);\n    }\n    if (node.camera !== undefined) {\n      node.camera = this.getCamera(node.camera);\n    }\n    if (node.skin !== undefined) {\n      node.skin = this.getSkin(node.skin);\n    }\n  }\n\n  _resolveSkin(skin, index) {\n    skin.id = `skin-${index}`;\n    skin.inverseBindMatrices = this.getAccessor(skin.inverseBindMatrices);\n  }\n\n  _resolveMesh(mesh, index) {\n    mesh.id = `mesh-${index}`;\n    for (const primitive of mesh.primitives) {\n      for (const attribute in primitive.attributes) {\n        primitive.attributes[attribute] = this.getAccessor(primitive.attributes[attribute]);\n      }\n      if (primitive.indices !== undefined) {\n        primitive.indices = this.getAccessor(primitive.indices);\n      }\n      if (primitive.material !== undefined) {\n        primitive.material = this.getMaterial(primitive.material);\n      }\n    }\n  }\n\n  _resolveMaterial(material, index) {\n    material.id = `material-${index}`;\n    if (material.normalTexture) {\n      material.normalTexture.texture = this.getTexture(material.normalTexture.index);\n    }\n    if (material.occlusionTexture) {\n      material.occlusionTexture.texture = this.getTexture(material.occlusionTexture.index);\n    }\n    if (material.emissiveTexture) {\n      material.emissiveTexture.texture = this.getTexture(material.emissiveTexture.index);\n    }\n\n    if (material.pbrMetallicRoughness) {\n      const mr = material.pbrMetallicRoughness;\n      if (mr.baseColorTexture) {\n        mr.baseColorTexture.texture = this.getTexture(mr.baseColorTexture.index);\n      }\n      if (mr.metallicRoughnessTexture) {\n        mr.metallicRoughnessTexture.texture = this.getTexture(mr.metallicRoughnessTexture.index);\n      }\n    }\n  }\n\n  _resolveAccessor(accessor, index) {\n    accessor.id = `accessor-${index}`;\n    if (accessor.bufferView !== undefined) {\n      // Draco encoded meshes don't have bufferView\n      accessor.bufferView = this.getBufferView(accessor.bufferView);\n    }\n\n    // Look up enums\n    accessor.bytesPerComponent = getBytesFromComponentType(accessor);\n    accessor.components = getSizeFromAccessorType(accessor);\n    accessor.bytesPerElement = accessor.bytesPerComponent * accessor.components;\n  }\n\n  _resolveTexture(texture, index) {\n    texture.id = `texture-${index}`;\n    texture.sampler = 'sampler' in texture ? this.getSampler(texture.sampler) : DEFAULT_SAMPLER;\n    texture.source = this.getImage(texture.source);\n  }\n\n  _resolveSampler(sampler, index) {\n    sampler.id = `sampler-${index}`;\n    // Map textual parameters to GL parameter values\n    sampler.parameters = {};\n    for (const key in sampler) {\n      const glEnum = this._enumSamplerParameter(key);\n      if (glEnum !== undefined) {\n        sampler.parameters[glEnum] = sampler[key];\n      }\n    }\n  }\n\n  _enumSamplerParameter(key) {\n    return SAMPLER_PARAMETER_GLTF_TO_GL[key];\n  }\n\n  _resolveImage(image, index, options) {\n    image.id = `image-${index}`;\n    if (image.bufferView !== undefined) {\n      image.bufferView = this.getBufferView(image.bufferView);\n    }\n\n    // TODO - Handle non-binary-chunk images, data URIs, URLs etc\n    // TODO - Image creation could be done on getImage instead of during load\n    const {createImages = true} = options;\n    if (createImages) {\n      image.image = this.glbParser.getImage(image);\n    } else {\n      image.getImageAsync = () => {\n        if (this.glbParser) {\n          return this.glbParser.getImageAsync(image);\n        } else if (image.uri) {\n          // TODO: Maybe just return the URL?\n          // TODO: Maybe use loaders.gl/core loadImage?\n          return new Promise(resolve => {\n            /* global Image */\n            const img = new Image();\n            img.crossOrigin = 'anonymous';\n            img.onload = () => resolve(img);\n            img.src = getFullUri(image.uri, options.uri);\n          });\n        }\n\n        // cannot get image\n        return null;\n      };\n    }\n  }\n\n  _resolveBufferView(bufferView, index) {\n    bufferView.id = `bufferView-${index}`;\n    bufferView.buffer = this.getBuffer(bufferView.buffer);\n\n    if (this.glbParser) {\n      bufferView.data = this.glbParser.getBufferView(bufferView);\n    } else {\n      const byteOffset = bufferView.byteOffset || 0;\n      bufferView.data = new Uint8Array(bufferView.buffer.data, byteOffset, bufferView.byteLength);\n    }\n  }\n\n  _resolveCamera(camera) {\n    // TODO - create 4x4 matrices\n    if (camera.perspective) {\n      // camera.matrix = createPerspectiveMatrix(camera.perspective);\n    }\n    if (camera.orthographic) {\n      // camera.matrix = createOrthographicMatrix(camera.orthographic);\n    }\n  }\n\n  // EXTENSIONS\n\n  // eslint-disable-next-line camelcase\n  _process_extension_KHR_lights_punctual() {\n    const {gltf} = this;\n\n    // Move the light array out of the extension and remove the extension\n    const extension = gltf.extensions && gltf.extensions.KHR_lights_punctual;\n    if (extension) {\n      gltf.lights = extension.lights;\n    }\n\n    this._removeExtension('KHR_lights_punctual');\n\n    // Any nodes that have the extension, add lights field pointing to light object\n    // and remove the extension\n    for (const node of gltf.nodes || []) {\n      const nodeExtension = node.extensions && node.extensions.KHR_lights_punctual;\n      if (nodeExtension) {\n        node.light = this._get('lights', nodeExtension.light);\n        delete node.extensions.KHR_lights_punctual;\n      }\n    }\n\n    delete gltf.lights;\n  }\n\n  // Removes an extension from the top-level list\n  _removeExtension(extensionName) {\n    if (this.gltf.extensionsRequired) {\n      this._removeStringFromArray(this.gltf.extensionsRequired, extensionName);\n    }\n    if (this.gltf.extensionsUsed) {\n      this._removeStringFromArray(this.gltf.extensionsUsed, extensionName);\n    }\n    if (this.gltf.extensions) {\n      delete this.gltf.extensions[extensionName];\n    }\n  }\n\n  _removeStringFromArray(array, string) {\n    let found = true;\n    while (found) {\n      const index = array.indexOf(string);\n      if (index > -1) {\n        array.splice(index, 1);\n      } else {\n        found = false;\n      }\n    }\n  }\n}\n"],"mappings":"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"}