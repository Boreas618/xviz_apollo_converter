{"version":3,"file":"gltf-parser.js","names":["fetchFile","getFullUri","getGLTFAccessors","getGLTFAccessor","KHR_DRACO_MESH_COMPRESSION","UBER_POINT_CLOUD_EXTENSION","GLBParser","GLTFPostProcessorOld","DEFAULT_OPTIONS","fetchLinkedResources","fetch","decompress","DracoLoader","postProcess","createImages","log","console","GLTFParser","parse","gltf","options","Object","assign","parseSync","_loadLinkedAssets","_decompressMeshes","postProcessor","glbParser","ArrayBuffer","isGLB","textDecoder","TextDecoder","decode","JSON","json","getApplicationData","key","getExtraData","extras","getExtension","extensionName","isExtension","getUsedExtensions","find","name","extensions","getRequiredExtension","isRequired","getRequiredExtensions","extensionsRequired","extensionsUsed","getScene","index","_get","getNode","getSkin","getMesh","getMaterial","getAccessor","getCamera","getTexture","getSampler","getImage","getBufferView","getBuffer","array","object","warn","Promise","all","buffers","map","buffer","_loadBuffer","uri","window","response","arrayBuffer","data","mesh","meshes","primitive","primitives","_decompressKhronosDracoPrimitive","_decompressUberDracoPrimitive","attributes","keys","length","Error","_removeExtension","compressedMesh","_getBufferViewArray","bufferView","decodedData","indices","mode","bufferViewIndex","bufferViews","byteOffset","Uint8Array","byteLength","_removeStringFromArray","string","found","indexOf","splice"],"sources":["../../../src/gltf/gltf-parser.js"],"sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/* global window, TextDecoder */\nimport '../common/text-encoding';\nimport {fetchFile} from '@loaders.gl/core';\nimport {getFullUri} from './gltf-utils/gltf-utils';\nimport {getGLTFAccessors, getGLTFAccessor} from './gltf-utils/gltf-attribute-utils';\nimport {KHR_DRACO_MESH_COMPRESSION, UBER_POINT_CLOUD_EXTENSION} from './gltf-constants';\nimport GLBParser from './glb-parser';\nimport GLTFPostProcessorOld from './gltf-post-processor-old';\n\nconst DEFAULT_OPTIONS = {\n  fetchLinkedResources: true, // Fetch any linked .BIN buffers, decode base64\n  fetch: fetchFile,\n  decompress: false, // Decompress Draco compressed meshes (if DracoLoader available)\n  DracoLoader: null,\n  postProcess: true,\n  createImages: false, // Create image objects\n  log: console // eslint-disable-line\n};\n\nexport class GLTFParser {\n  async parse(gltf, options = {}) {\n    options = Object.assign({}, DEFAULT_OPTIONS, options);\n\n    // Postpone decompressing/postprocessing to make sure we load any linked files first\n    // TODO - is this really needed?\n    this.parseSync(gltf, {...options, postProcess: false, decompress: false});\n\n    // Load linked buffers asynchronously and decodes base64 buffers in parallel\n    if (options.fetchLinkedResources) {\n      await this._loadLinkedAssets(options);\n    }\n\n    if (options.decompress) {\n      this._decompressMeshes(options);\n    }\n\n    if (options.postProcess) {\n      const postProcessor = new GLTFPostProcessorOld();\n      postProcessor.postProcess(this.gltf, this.glbParser, options);\n    }\n\n    return this.gltf;\n  }\n\n  // NOTE: The sync parser cannot handle linked assets or base64 encoded resources\n  // gtlf - input can be arrayBuffer (GLB or UTF8 encoded JSON), string (JSON), or parsed JSON.\n  parseSync(gltf, options = {}) {\n    options = Object.assign({}, DEFAULT_OPTIONS, options);\n\n    // If binary is not starting with magic bytes, convert to string\n    if (gltf instanceof ArrayBuffer && !GLBParser.isGLB(gltf, options)) {\n      const textDecoder = new TextDecoder();\n      gltf = textDecoder.decode(gltf);\n    }\n\n    // If string, try to parse as JSON\n    if (typeof gltf === 'string') {\n      gltf = JSON.parse(gltf);\n    }\n\n    if (gltf instanceof ArrayBuffer) {\n      // Extract JSON from the GLB container\n      this.glbParser = new GLBParser();\n      this.gltf = this.glbParser.parseSync(gltf).json;\n      this.json = this.gltf;\n    } else {\n      this.glbParser = null;\n      this.gltf = gltf;\n      this.json = gltf;\n    }\n\n    // TODO: we could handle base64 encoded files in the non-async path\n    // await this._loadBuffersSync(options);\n\n    // TODO: we could synchronously decode base64 encoded URIs in the non-async path\n    // await this._loadLinkedAssetsSync(options);\n\n    if (options.decompress) {\n      this._decompressMeshes(options);\n    }\n\n    if (options.postProcess) {\n      const postProcessor = new GLTFPostProcessorOld();\n      postProcessor.postProcess(this.gltf, this.glbParser, options);\n    }\n\n    return this.gltf;\n  }\n\n  // Accessors\n\n  getApplicationData(key) {\n    if (this.json) {\n      return this.json[key];\n    } else if (this.glbParser) {\n      return this.glbParser.getApplicationData(key);\n    }\n\n    return null;\n  }\n\n  getExtraData(key) {\n    // TODO - Data is already unpacked by GLBParser\n    const extras = this.json.extras || {};\n    return extras[key];\n  }\n\n  getExtension(extensionName) {\n    const isExtension = this.getUsedExtensions().find(name => name === extensionName);\n    const extensions = this.json.extensions || {};\n    return isExtension ? extensions[extensionName] || true : null;\n  }\n\n  getRequiredExtension(extensionName) {\n    const isRequired = this.getRequiredExtensions().find(name => name === extensionName);\n    return isRequired ? this.getExtension(extensionName) : null;\n  }\n\n  getRequiredExtensions() {\n    return this.json.extensionsRequired || [];\n  }\n\n  getUsedExtensions() {\n    return this.json.extensionsUsed || [];\n  }\n\n  getScene(index) {\n    return this._get('scenes', index);\n  }\n\n  getNode(index) {\n    return this._get('nodes', index);\n  }\n\n  getSkin(index) {\n    return this._get('skins', index);\n  }\n\n  getMesh(index) {\n    return this._get('meshes', index);\n  }\n\n  getMaterial(index) {\n    return this._get('materials', index);\n  }\n\n  getAccessor(index) {\n    return this._get('accessors', index);\n  }\n\n  getCamera(index) {\n    return null; // TODO: fix this\n  }\n\n  getTexture(index) {\n    return this._get('textures', index);\n  }\n\n  getSampler(index) {\n    return this._get('samplers', index);\n  }\n\n  getImage(index) {\n    return this._get('images', index);\n  }\n\n  getBufferView(index) {\n    return this._get('bufferViews', index);\n  }\n\n  getBuffer(index) {\n    return this._get('buffers', index);\n  }\n\n  // PARSING HELPERS\n\n  _get(array, index) {\n    // check if already resolved\n    if (typeof index === 'object') {\n      return index;\n    }\n    const object = this.gltf[array] && this.gltf[array][index];\n    if (!object) {\n      console.warn(`glTF file error: Could not find ${array}[${index}]`); // eslint-disable-line\n    }\n    return object;\n  }\n\n  // PARSING HELPERS\n\n  // Load linked assets\n  async _loadLinkedAssets(options) {\n    return await Promise.all(this.gltf.buffers.map(buffer => this._loadBuffer(buffer, options)));\n  }\n\n  async _loadBuffer(buffer, options) {\n    // NOTE: options.uri is not correctly passed, however this class is deprecated...\n    if (buffer.uri && options.uri) {\n      const fetch = options.fetch || window.fetch;\n      const uri = getFullUri(buffer.uri, options.uri);\n      const response = await fetch(uri);\n      const arrayBuffer = await response.arrayBuffer();\n      buffer.data = arrayBuffer;\n      buffer.uri = null;\n    }\n  }\n\n  // POST PROCESSING\n\n  _decompressMeshes(options) {\n    // We have a \"soft dependency\" on Draco to avoid bundling it when not needed\n    // DracoEncoder needs to be imported and supplied by app\n    if (!options.DracoLoader || !options.decompress) {\n      return;\n    }\n\n    for (const mesh of this.gltf.meshes || []) {\n      // Decompress all the primitives in a mesh\n      for (const primitive of mesh.primitives) {\n        this._decompressKhronosDracoPrimitive(primitive, options);\n        this._decompressUberDracoPrimitive(primitive, options);\n        if (!primitive.attributes || Object.keys(primitive.attributes).length === 0) {\n          throw new Error('Empty glTF primitive: decompression failure?');\n        }\n      }\n    }\n\n    // We have now decompressed all primitives, we can remove the top-level extensions\n    this._removeExtension(KHR_DRACO_MESH_COMPRESSION);\n    this._removeExtension(UBER_POINT_CLOUD_EXTENSION);\n  }\n\n  // Unpacks one mesh primitive and removes the extension from the primitive\n  // TODO - Implement fallback behavior per KHR_DRACO_MESH_COMPRESSION spec\n  // TODO - Decompression could be threaded: Use DracoWorkerLoader?\n  //\n  // eslint-disable-next-line max-len\n  // https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_draco_mesh_compression\n  _decompressKhronosDracoPrimitive(primitive, options) {\n    const compressedMesh = primitive.extensions && primitive.extensions[KHR_DRACO_MESH_COMPRESSION];\n    if (!compressedMesh) {\n      return;\n    }\n\n    // Extension will be processed, delete it\n    delete primitive.extensions[KHR_DRACO_MESH_COMPRESSION];\n\n    const buffer = this._getBufferViewArray(compressedMesh.bufferView);\n    const decodedData = options.DracoLoader.parseSync(buffer);\n    primitive.attributes = getGLTFAccessors(decodedData.attributes);\n    if (decodedData.indices) {\n      primitive.indices = getGLTFAccessor(decodedData.indices);\n    }\n  }\n\n  // Unpacks one mesh primitive and removes the extension from the primitive\n  _decompressUberDracoPrimitive(primitive, options) {\n    const compressedMesh = primitive.extensions && primitive.extensions[UBER_POINT_CLOUD_EXTENSION];\n    if (!compressedMesh) {\n      return;\n    }\n\n    if (primitive.mode !== 0) {\n      throw new Error(UBER_POINT_CLOUD_EXTENSION);\n    }\n\n    // Extension will be processed, delete it\n    delete primitive.extensions[UBER_POINT_CLOUD_EXTENSION];\n\n    const buffer = this._getBufferViewArray(compressedMesh.bufferView);\n    const decodedData = options.DracoLoader.parseSync(buffer);\n    primitive.attributes = decodedData.attributes;\n  }\n\n  _getBufferViewArray(bufferViewIndex) {\n    const bufferView = this.gltf.bufferViews[bufferViewIndex];\n    if (this.glbParser) {\n      return this.glbParser.getBufferView(bufferView);\n    }\n\n    const buffer = this.gltf.buffers[bufferView.buffer].data;\n    const byteOffset = bufferView.byteOffset || 0;\n    return new Uint8Array(buffer, byteOffset, bufferView.byteLength);\n  }\n\n  // Removes an extension from the top-level list\n  _removeExtension(extensionName) {\n    if (this.json.extensionsRequired) {\n      this._removeStringFromArray(this.json.extensionsRequired, extensionName);\n    }\n    if (this.json.extensionsUsed) {\n      this._removeStringFromArray(this.json.extensionsUsed, extensionName);\n    }\n    if (this.json.extensions) {\n      delete this.json.extensions[extensionName];\n    }\n  }\n\n  _removeStringFromArray(array, string) {\n    let found = true;\n    while (found) {\n      const index = array.indexOf(string);\n      if (index > -1) {\n        array.splice(index, 1);\n      } else {\n        found = false;\n      }\n    }\n  }\n}\n"],"mappings":"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"}