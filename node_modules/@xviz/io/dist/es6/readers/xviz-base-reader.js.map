{"version":3,"file":"xviz-base-reader.js","names":["isJSONString","XVIZBaseReader","constructor","source","options","suffix","index","_readIndex","readMetadata","data","readSync","_xvizMessage","forceJson","undefined","readMessage","messageIndex","checkMessage","existsSync","timeRange","startTime","endTime","messageCount","timing","length","findMessage","timestamp","lastMessage","first","last","findIndex","timeEntry","i","close","indexData","JSON","parse"],"sources":["../../../src/readers/xviz-base-reader.js"],"sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport {isJSONString} from '../common/loaders';\n\n// Base class that uses a Source to read file XVIZ file data\nexport class XVIZBaseReader {\n  constructor(source, options = {}) {\n    this.source = source;\n    this.options = options;\n    this.suffix = options.suffix || '-frame.json';\n\n    // Read the message index\n    this.index = this._readIndex();\n    /* Index schema\n     * startTime,\n     * endTime,\n     * timing: [ [minMessageTime, maxMessageTime, index, name], ...]\n     */\n  }\n\n  readMetadata() {\n    if (this.source) {\n      let data = this.source.readSync(this._xvizMessage(1));\n      if (!data) {\n        data = this.source.readSync(this._xvizMessage(1, {forceJson: true}));\n      }\n      return data;\n    }\n\n    return undefined;\n  }\n\n  readMessage(messageIndex) {\n    if (this.source) {\n      // Data messages begin at the filename 2-frame.*\n      return this.source.readSync(this._xvizMessage(2 + messageIndex));\n    }\n\n    return undefined;\n  }\n\n  checkMessage(messageIndex) {\n    if (this.source) {\n      return this.source.existsSync(this._xvizMessage(2 + messageIndex));\n    }\n\n    return false;\n  }\n\n  timeRange() {\n    if (this.index) {\n      const {startTime, endTime} = this.index;\n      return {startTime, endTime};\n    }\n\n    return {startTime: null, endTime: null};\n  }\n\n  messageCount() {\n    if (this.index) {\n      return this.index.timing.length;\n    }\n\n    return undefined;\n  }\n\n  // Returns 2 indices covering the messages that bound the requested timestamp\n  findMessage(timestamp) {\n    if (!this.index) {\n      return undefined;\n    }\n\n    const {startTime, endTime, timing} = this.index;\n    const messageCount = this.messageCount();\n    const lastMessage = messageCount > 0 ? messageCount - 1 : 0;\n\n    if (timestamp < startTime) {\n      return {first: 0, last: 0};\n    }\n\n    if (timestamp > endTime) {\n      return {first: lastMessage, last: lastMessage};\n    }\n\n    let first = timing.findIndex(timeEntry => timeEntry[0] >= timestamp);\n\n    // Reverse search for end index\n    let last = -1;\n    let i = lastMessage;\n    while (i >= 0) {\n      const timeEntry = timing[i];\n      if (timeEntry[1] <= timestamp) {\n        last = i;\n        break;\n      }\n\n      i--;\n    }\n\n    if (first === -1) {\n      first = 0;\n    }\n\n    if (last === -1) {\n      last = lastMessage;\n    }\n\n    return {first, last};\n  }\n\n  close() {\n    this.source.close();\n  }\n\n  // Support various formatted message names\n  _xvizMessage(index, {forceJson = false} = {}) {\n    if (index === 0 || forceJson) {\n      return `${index}-frame.json`;\n    }\n\n    return `${index}${this.suffix}`;\n  }\n\n  _readIndex() {\n    if (this.source) {\n      const indexData = this.source.readSync(this._xvizMessage(0));\n      if (indexData) {\n        if (isJSONString(indexData)) {\n          return JSON.parse(indexData);\n        } else if (typeof indexData === 'object') {\n          return indexData;\n        }\n      }\n    }\n\n    return undefined;\n  }\n}\n"],"mappings":"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"}