{"version":3,"file":"xviz-base-provider.js","names":["XVIZData","MessageIterator","constructor","start","end","increment","current","valid","value","next","data","XVIZBaseProvider","reader","options","metadata","_valid","init","startTime","endTime","timeRange","_readMetadata","Number","isFinite","checkMessage","Error","xvizMetadata","xvizMessage","iterator","message","_readMessage","getMessageIterator","startMessages","findMessage","endMessages","undefined","first","last","readMessage","readMetadata"],"sources":["../../../src/providers/xviz-base-provider.js"],"sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport {XVIZData} from '../common/xviz-data';\n\n// Generic iterator that stores context for context for an iterator\nclass MessageIterator {\n  constructor(start, end, increment = 1) {\n    this.start = start;\n    this.end = end;\n    this.increment = increment;\n    this.current = start;\n  }\n\n  valid() {\n    return this.current <= this.end;\n  }\n\n  value() {\n    return this.current;\n  }\n\n  next() {\n    const valid = this.valid();\n    if (!valid) {\n      return {valid};\n    }\n\n    const data = this.current;\n    this.current += this.increment;\n\n    return {\n      valid,\n      data\n    };\n  }\n}\n\nexport class XVIZBaseProvider {\n  constructor({reader, options}) {\n    this.reader = reader;\n    this.options = options;\n\n    this.metadata = null;\n    this._valid = false;\n  }\n\n  // Read index & metadata\n  async init() {\n    if (!this.reader) {\n      return;\n    }\n\n    const {startTime, endTime} = this.reader.timeRange();\n    this.metadata = this._readMetadata();\n\n    if (\n      this.metadata &&\n      Number.isFinite(startTime) &&\n      Number.isFinite(endTime) &&\n      this.reader.checkMessage(0) // verify the first message exists\n    ) {\n      this._valid = true;\n    }\n\n    if (this.metadata && (!Number.isFinite(startTime) || !Number.isFinite(endTime))) {\n      // TODO: should provide a command for the cli to regenerate the index files\n      throw new Error('The data source is missing the data index');\n    }\n  }\n\n  valid() {\n    return this._valid;\n  }\n\n  xvizMetadata() {\n    return this.metadata;\n  }\n\n  async xvizMessage(iterator) {\n    const {valid, data} = iterator.next();\n    if (!valid) {\n      return null;\n    }\n\n    const message = this._readMessage(data);\n    return message;\n  }\n\n  // The Provider provides an iterator since\n  // different sources may \"index\" their data independently\n  // however all iterators are based on a startTime/endTime\n  //\n  // If startTime and endTime cover the actual range, then\n  // they will be clamped to the actual range.\n  // Otherwise return undefined.\n  getMessageIterator({startTime, endTime} = {}, options = {}) {\n    const {startTime: start, endTime: end} = this.reader.timeRange();\n\n    if (!Number.isFinite(startTime)) {\n      startTime = start;\n    }\n\n    if (!Number.isFinite(endTime)) {\n      endTime = end;\n    }\n\n    if (startTime > endTime) {\n      return null;\n    }\n\n    const startMessages = this.reader.findMessage(startTime);\n    const endMessages = this.reader.findMessage(endTime);\n\n    if (startMessages !== undefined && endMessages !== undefined) {\n      return new MessageIterator(startMessages.first, endMessages.last);\n    }\n\n    return null;\n  }\n\n  // return XVIZData for message or undefined\n  _readMessage(message) {\n    const data = this.reader.readMessage(message);\n    if (data) {\n      return new XVIZData(data);\n    }\n\n    return undefined;\n  }\n\n  // return Metadata or undefined\n  _readMetadata() {\n    const data = this.reader.readMetadata();\n    if (data) {\n      return new XVIZData(data);\n    }\n\n    return undefined;\n  }\n}\n"],"mappings":"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"}