{"version":3,"file":"xviz-base-reader.js","names":["XVIZBaseReader","source","options","suffix","index","_readIndex","data","readSync","_xvizMessage","forceJson","undefined","messageIndex","existsSync","startTime","endTime","timing","length","timestamp","messageCount","lastMessage","first","last","findIndex","timeEntry","i","close","indexData","isJSONString","JSON","parse"],"sources":["../../../src/readers/xviz-base-reader.js"],"sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport {isJSONString} from '../common/loaders';\n\n// Base class that uses a Source to read file XVIZ file data\nexport class XVIZBaseReader {\n  constructor(source, options = {}) {\n    this.source = source;\n    this.options = options;\n    this.suffix = options.suffix || '-frame.json';\n\n    // Read the message index\n    this.index = this._readIndex();\n    /* Index schema\n     * startTime,\n     * endTime,\n     * timing: [ [minMessageTime, maxMessageTime, index, name], ...]\n     */\n  }\n\n  readMetadata() {\n    if (this.source) {\n      let data = this.source.readSync(this._xvizMessage(1));\n      if (!data) {\n        data = this.source.readSync(this._xvizMessage(1, {forceJson: true}));\n      }\n      return data;\n    }\n\n    return undefined;\n  }\n\n  readMessage(messageIndex) {\n    if (this.source) {\n      // Data messages begin at the filename 2-frame.*\n      return this.source.readSync(this._xvizMessage(2 + messageIndex));\n    }\n\n    return undefined;\n  }\n\n  checkMessage(messageIndex) {\n    if (this.source) {\n      return this.source.existsSync(this._xvizMessage(2 + messageIndex));\n    }\n\n    return false;\n  }\n\n  timeRange() {\n    if (this.index) {\n      const {startTime, endTime} = this.index;\n      return {startTime, endTime};\n    }\n\n    return {startTime: null, endTime: null};\n  }\n\n  messageCount() {\n    if (this.index) {\n      return this.index.timing.length;\n    }\n\n    return undefined;\n  }\n\n  // Returns 2 indices covering the messages that bound the requested timestamp\n  findMessage(timestamp) {\n    if (!this.index) {\n      return undefined;\n    }\n\n    const {startTime, endTime, timing} = this.index;\n    const messageCount = this.messageCount();\n    const lastMessage = messageCount > 0 ? messageCount - 1 : 0;\n\n    if (timestamp < startTime) {\n      return {first: 0, last: 0};\n    }\n\n    if (timestamp > endTime) {\n      return {first: lastMessage, last: lastMessage};\n    }\n\n    let first = timing.findIndex(timeEntry => timeEntry[0] >= timestamp);\n\n    // Reverse search for end index\n    let last = -1;\n    let i = lastMessage;\n    while (i >= 0) {\n      const timeEntry = timing[i];\n      if (timeEntry[1] <= timestamp) {\n        last = i;\n        break;\n      }\n\n      i--;\n    }\n\n    if (first === -1) {\n      first = 0;\n    }\n\n    if (last === -1) {\n      last = lastMessage;\n    }\n\n    return {first, last};\n  }\n\n  close() {\n    this.source.close();\n  }\n\n  // Support various formatted message names\n  _xvizMessage(index, {forceJson = false} = {}) {\n    if (index === 0 || forceJson) {\n      return `${index}-frame.json`;\n    }\n\n    return `${index}${this.suffix}`;\n  }\n\n  _readIndex() {\n    if (this.source) {\n      const indexData = this.source.readSync(this._xvizMessage(0));\n      if (indexData) {\n        if (isJSONString(indexData)) {\n          return JSON.parse(indexData);\n        } else if (typeof indexData === 'object') {\n          return indexData;\n        }\n      }\n    }\n\n    return undefined;\n  }\n}\n"],"mappings":"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"}