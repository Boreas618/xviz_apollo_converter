{"version":3,"file":"index.js","names":["createXVIZProvider","ProviderClass","args","provider","init","valid","XVIZProviderFactoryClass","providerClasses","className","XVIZJSONProvider","XVIZBinaryProvider","XVIZProtobufProvider","push","providerEntry","options","loader","XVIZProviderFactory"],"sources":["../../../src/providers/index.js"],"sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport {XVIZJSONProvider} from './xviz-json-provider';\nimport {XVIZBinaryProvider} from './xviz-binary-provider';\nimport {XVIZProtobufProvider} from './xviz-protobuf-provider';\n\nasync function createXVIZProvider(ProviderClass, args) {\n  let provider = null;\n  provider = new ProviderClass(args);\n  await provider.init();\n\n  if (provider.valid()) {\n    return provider;\n  }\n\n  return null;\n}\n\nexport class XVIZProviderFactoryClass {\n  constructor() {\n    this.providerClasses = [\n      {className: XVIZJSONProvider},\n      {className: XVIZBinaryProvider},\n      {className: XVIZProtobufProvider}\n    ];\n  }\n\n  addProviderClass(className, args) {\n    this.providerClasses.push({className, args});\n  }\n\n  /*\n   * Attempt to find a valid provider for the given source\n   * returning null if none can be found.\n   *\n   * @param args.root\n   * @param args.source\n   * @param args.options\n   */\n  async open(args) {\n    for (const providerEntry of this.providerClasses) {\n      const options = {...args.options, ...providerEntry.args};\n      const loader = await createXVIZProvider(providerEntry.className, {...args, options});\n\n      if (loader) {\n        return loader;\n      }\n    }\n\n    return null;\n  }\n}\n\nexport const XVIZProviderFactory = new XVIZProviderFactoryClass();\n"],"mappings":";;;;;;;;;;;;;;;;;;;AAaA;;AACA;;AACA;;;;;;;;;;;;SAEeA,kB;;;;;wFAAf,kBAAkCC,aAAlC,EAAiDC,IAAjD;IAAA;IAAA;MAAA;QAAA;UAAA;YACMC,QADN,GACiB,IADjB;YAEEA,QAAQ,GAAG,IAAIF,aAAJ,CAAkBC,IAAlB,CAAX;YAFF;YAAA,OAGQC,QAAQ,CAACC,IAAT,EAHR;;UAAA;YAAA,KAKMD,QAAQ,CAACE,KAAT,EALN;cAAA;cAAA;YAAA;;YAAA,kCAMWF,QANX;;UAAA;YAAA,kCASS,IATT;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,C;;;;IAYaG,wB;EACX,oCAAc;IAAA;IACZ,KAAKC,eAAL,GAAuB,CACrB;MAACC,SAAS,EAAEC;IAAZ,CADqB,EAErB;MAACD,SAAS,EAAEE;IAAZ,CAFqB,EAGrB;MAACF,SAAS,EAAEG;IAAZ,CAHqB,CAAvB;EAKD;;;;WAED,0BAAiBH,SAAjB,EAA4BN,IAA5B,EAAkC;MAChC,KAAKK,eAAL,CAAqBK,IAArB,CAA0B;QAACJ,SAAS,EAATA,SAAD;QAAYN,IAAI,EAAJA;MAAZ,CAA1B;IACD;;;;kFAUD,iBAAWA,IAAX;QAAA;;QAAA;UAAA;YAAA;cAAA;gBAAA,uCAC8B,KAAKK,eADnC;gBAAA;;gBAAA;;cAAA;gBAAA;kBAAA;kBAAA;gBAAA;;gBACaM,aADb;gBAEUC,OAFV,mCAEwBZ,IAAI,CAACY,OAF7B,GAEyCD,aAAa,CAACX,IAFvD;gBAAA;gBAAA,OAGyBF,kBAAkB,CAACa,aAAa,CAACL,SAAf,kCAA8BN,IAA9B;kBAAoCY,OAAO,EAAPA;gBAApC,GAH3C;;cAAA;gBAGUC,MAHV;;gBAAA,KAKQA,MALR;kBAAA;kBAAA;gBAAA;;gBAAA,iCAMaA,MANb;;cAAA;gBAAA;gBAAA;;cAAA;gBAAA;gBAAA;;cAAA;gBAAA;gBAAA;;gBAAA;;cAAA;gBAAA;;gBAAA;;gBAAA;;cAAA;gBAAA,iCAUS,IAVT;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,C;;;;;;;;;;;;;AAcK,IAAMC,mBAAmB,GAAG,IAAIV,wBAAJ,EAA5B"}