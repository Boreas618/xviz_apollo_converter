{"version":3,"file":"gltf-builder.js","names":["GLTFBuilder","options","DracoWriter","DracoLoader","key","data","packOptions","jsonData","nopack","packBinaryJson","json","packedJson","extras","extensionName","assert","extensions","registerUsedExtension","addExtension","registerRequiredExtension","extensionsUsed","find","ext","push","extensionsRequired","attributes","indices","mode","accessors","_addAttributes","glTFMesh","primitives","meshes","length","accessorIndices","Error","KHR_DRACO_MESH_COMPRESSION","compressedData","encodeSync","decodedData","parseSync","fauxAccessors","_addFauxAttributes","bufferViewIndex","addBufferView","bufferView","pointcloud","UBER_POINT_CLOUD_EXTENSION","imageData","sizeAndType","getBinaryImageMetadata","mimeType","width","height","images","GLBBuilder"],"sources":["../../../src/gltf/gltf-builder.js"],"sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport {getBinaryImageMetadata} from '@loaders.gl/images';\nimport {assert} from './assert';\nimport {KHR_DRACO_MESH_COMPRESSION, UBER_POINT_CLOUD_EXTENSION} from './gltf-constants';\nimport GLBBuilder from './glb-builder';\nimport {packBinaryJson} from '../writers/xviz-pack-binary';\n\nexport class GLTFBuilder extends GLBBuilder {\n  constructor(options = {}) {\n    super(options);\n\n    // Soft dependency on DRACO, app needs to import and supply these\n    this.DracoWriter = options.DracoWriter;\n    this.DracoLoader = options.DracoLoader;\n  }\n\n  // NOTE: encode() inherited from GLBBuilder\n\n  // TODO - support encoding to non-GLB versions of glTF format\n  // Encode as a textual JSON file with binary data in base64 data URLs.\n  // encodeAsDataURLs(options)\n  // Encode as a JSON with all images (and buffers?) in separate binary files\n  // encodeAsSeparateFiles(options)\n\n  // Add an extra application-defined key to the top-level data structure\n  // By default packs JSON by extracting binary data and replacing it with JSON pointers\n  addApplicationData(key, data, packOptions = {}) {\n    const jsonData = packOptions.nopack ? data : packBinaryJson(data, this, null, packOptions);\n    this.json[key] = jsonData;\n    return this;\n  }\n\n  // `extras` - Standard GLTF field for storing application specific data\n  // By default packs JSON by extracting binary data and replacing it with JSON pointers\n  addExtraData(key, data, packOptions = {}) {\n    const packedJson = packOptions.nopack ? data : packBinaryJson(data, this, null, packOptions);\n    this.json.extras = this.json.extras || {};\n    this.json.extras[key] = packedJson;\n    return this;\n  }\n\n  // Add to standard GLTF top level extension object, mark as used\n  // By default packs JSON by extracting binary data and replacing it with JSON pointers\n  addExtension(extensionName, data, packOptions = {}) {\n    assert(data);\n    const packedJson = packOptions.nopack ? data : packBinaryJson(data, this, null, packOptions);\n    this.json.extensions = this.json.extensions || {};\n    this.json.extensions[extensionName] = packedJson;\n    this.registerUsedExtension(extensionName);\n    return this;\n  }\n\n  // Standard GLTF top level extension object, mark as used and required\n  // By default packs JSON by extracting binary data and replacing it with JSON pointers\n  addRequiredExtension(extensionName, data, packOptions = {}) {\n    assert(data);\n    const packedJson = packOptions.nopack ? data : packBinaryJson(data, this, null, packOptions);\n    this.addExtension(extensionName, packedJson);\n    this.registerRequiredExtension(extensionName);\n    return this;\n  }\n\n  // Add extensionName to list of used extensions\n  registerUsedExtension(extensionName) {\n    this.json.extensionsUsed = this.json.extensionsUsed || [];\n    if (!this.json.extensionsUsed.find(ext => ext === extensionName)) {\n      this.json.extensionsUsed.push(extensionName);\n    }\n  }\n\n  // Add extensionName to list of required extensions\n  registerRequiredExtension(extensionName) {\n    this.registerUsedExtension(extensionName);\n    this.json.extensionsRequired = this.json.extensionsRequired || [];\n    if (!this.json.extensionsRequired.find(ext => ext === extensionName)) {\n      this.json.extensionsRequired.push(extensionName);\n    }\n  }\n\n  // mode:\n  // POINTS:  0x0000,\n  // LINES: 0x0001,\n  // LINE_LOOP: 0x0002,\n  // LINE_STRIP:  0x0003,\n  // TRIANGLES: 0x0004,\n  // TRIANGLE_STRIP:  0x0005,\n  // TRIANGLE_FAN:  0x0006,\n\n  addMesh(attributes, indices, mode = 4) {\n    const accessors = this._addAttributes(attributes);\n\n    const glTFMesh = {\n      primitives: [\n        {\n          attributes: accessors,\n          indices,\n          mode\n        }\n      ]\n    };\n\n    this.json.meshes = this.json.meshes || [];\n    this.json.meshes.push(glTFMesh);\n    return this.json.meshes.length - 1;\n  }\n\n  addPointCloud(attributes) {\n    const accessorIndices = this._addAttributes(attributes);\n\n    const glTFMesh = {\n      primitives: [\n        {\n          attributes: accessorIndices,\n          mode: 0 // GL.POINTS\n        }\n      ]\n    };\n\n    this.json.meshes = this.json.meshes || [];\n    this.json.meshes.push(glTFMesh);\n    return this.json.meshes.length - 1;\n  }\n\n  // eslint-disable-next-line max-len\n  // https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_draco_mesh_compression\n  // Only TRIANGLES: 0x0004 and TRIANGLE_STRIP: 0x0005 are supported\n  addCompressedMesh(attributes, indices, mode = 4) {\n    if (!this.DracoWriter || !this.DracoLoader) {\n      throw new Error('DracoWriter/DracoLoader not available');\n    }\n\n    // Since we do not add fallback data\n    this.registerRequiredExtension(KHR_DRACO_MESH_COMPRESSION);\n\n    const compressedData = this.DracoWriter.encodeSync({attributes});\n\n    // Draco compression may change the order and number of vertices in a mesh.\n    // To satisfy the requirement that accessors properties be correct for both\n    // compressed and uncompressed data, generators should create uncompressed\n    // attributes and indices using data that has been decompressed from the Draco buffer,\n    // rather than the original source data.\n    const decodedData = this.DracoLoader.parseSync({attributes});\n    const fauxAccessors = this._addFauxAttributes(decodedData.attributes);\n\n    const bufferViewIndex = this.addBufferView(compressedData);\n\n    const glTFMesh = {\n      primitives: [\n        {\n          attributes: fauxAccessors, // TODO - verify with spec\n          mode, // GL.POINTS\n          extensions: {\n            [KHR_DRACO_MESH_COMPRESSION]: {\n              bufferView: bufferViewIndex,\n              attributes: fauxAccessors // TODO - verify with spec\n            }\n          }\n        }\n      ]\n    };\n\n    this.json.meshes = this.json.meshes || [];\n    this.json.meshes.push(glTFMesh);\n    return this.json.meshes.length - 1;\n  }\n\n  addCompressedPointCloud(attributes) {\n    if (!this.DracoWriter || !this.DracoLoader) {\n      throw new Error('DracoWriter/DracoLoader not available');\n    }\n\n    attributes.mode = 0;\n    const compressedData = this.DracoWriter.encodeSync(attributes, {pointcloud: true});\n\n    const bufferViewIndex = this.addBufferView(compressedData);\n\n    const glTFMesh = {\n      primitives: [\n        {\n          attributes: {}, // This will be populated after decompression\n          mode: 0, // GL.POINTS\n          extensions: {\n            [UBER_POINT_CLOUD_EXTENSION]: {\n              bufferView: bufferViewIndex\n            }\n          }\n        }\n      ]\n    };\n\n    this.registerRequiredExtension(UBER_POINT_CLOUD_EXTENSION);\n\n    this.json.meshes = this.json.meshes || [];\n    this.json.meshes.push(glTFMesh);\n    return this.json.meshes.length - 1;\n  }\n\n  // Adds a binary image. Builds glTF \"JSON metadata\" and saves buffer reference\n  // Buffer will be copied into BIN chunk during \"pack\"\n  // Currently encodes as glTF image\n  addImage(imageData) {\n    const bufferViewIndex = this.addBufferView(imageData);\n\n    // Get the properties of the image to add as metadata.\n    const sizeAndType = getBinaryImageMetadata(imageData) || {};\n    if (sizeAndType) {\n      // width and height are non-spec fields\n      const {mimeType, width, height} = sizeAndType;\n      this.json.images.push({\n        bufferView: bufferViewIndex,\n        mimeType,\n        width,\n        height\n      });\n    } else {\n      // TODO: Spec violation, if we are using a bufferView, mimeType must be defined:\n      //   https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#images\n      //   \"a reference to a bufferView; in that case mimeType must be defined.\"\n      this.json.images.push({\n        bufferView: bufferViewIndex\n      });\n    }\n\n    return this.json.images.length - 1;\n  }\n}\n"],"mappings":"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"}