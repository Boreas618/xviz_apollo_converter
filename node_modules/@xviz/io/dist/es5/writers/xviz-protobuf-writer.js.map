{"version":3,"file":"xviz-protobuf-writer.js","names":["messageName","index","XVIZProtobufWriter","sink","options","envelope","messageTimings","messages","Map","wroteMessageIndex","xvizMetadata","_checkValid","_saveTimestamp","pbJSON","xvizConvertProtobuf","pbInfo","type","XVIZ_PROTOBUF_MESSAGE","Metadata","msg","fromObject","_applyEnvelope","pbBuffer","encode","finish","buffer","Uint8Array","byteLength","set","XVIZ_PROTOBUF_MAGIC","writeToSink","messageIndex","xvizMessage","StateUpdate","info","value","Envelope","data","type_url","startTime","endTime","messageTimes","Array","from","keys","sort","a","b","timing","forEach","limit","length","Error","push","get","JSON","stringify","_writeMessageIndex","xviz_data","log_info","updates","undefined","start_time","end_time","every","update","timestamp","min","Math","map","max","name","writeSync","XVIZBaseWriter","COLOR_KEYS","toColorArray","object","clrs","substring","len","color","step","i","parseInt","substr","keyName","isArray","element","flat","el","ArrayBuffer","isView","Number","isFinite","includes","match","properties","Object","newObject","objectKeys","key"],"sources":["../../../src/writers/xviz-protobuf-writer.js"],"sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/* eslint-disable */\nimport {XVIZBaseWriter} from './xviz-base-writer';\nimport {XVIZ_PROTOBUF_MAGIC, XVIZ_PROTOBUF_MESSAGE} from '../common/protobuf-support';\n\n// 0-frame is an index file for timestamp metadata\n// 1-frame is the metadata file for the log\n// 2-frame is where the actual XVIZ updates begin\nconst messageName = index => `${index + 2}-frame`;\n\nexport class XVIZProtobufWriter extends XVIZBaseWriter {\n  constructor(sink, options = {}) {\n    super(sink);\n\n    const {envelope = true} = options;\n    this.messageTimings = {\n      messages: new Map()\n    };\n    this.wroteMessageIndex = null;\n    this.options = {envelope};\n  }\n\n  // xvizMetadata is the object returned\n  // from a Builder.\n  writeMetadata(xvizMetadata) {\n    this._checkValid();\n    this._saveTimestamp(xvizMetadata);\n\n    const pbJSON = xvizConvertProtobuf(xvizMetadata);\n    let pbInfo = {\n      type: XVIZ_PROTOBUF_MESSAGE.Metadata,\n      msg: XVIZ_PROTOBUF_MESSAGE.Metadata.fromObject(pbJSON)\n    };\n\n    if (this.options.envelope) {\n      this._applyEnvelope(pbInfo);\n    }\n\n    const pbBuffer = pbInfo.type.encode(pbInfo.msg).finish();\n    const buffer = new Uint8Array(pbBuffer.byteLength + 4);\n    buffer.set(XVIZ_PROTOBUF_MAGIC, 0);\n    buffer.set(pbBuffer, 4);\n    this.writeToSink('1-frame.pbe', buffer);\n  }\n\n  writeMessage(messageIndex, xvizMessage) {\n    this._checkValid();\n    this._saveTimestamp(xvizMessage, messageIndex);\n\n    const pbJSON = xvizConvertProtobuf(xvizMessage);\n    let pbInfo = {\n      type: XVIZ_PROTOBUF_MESSAGE.StateUpdate,\n      msg: XVIZ_PROTOBUF_MESSAGE.StateUpdate.fromObject(pbJSON)\n    };\n\n    if (this.options.envelope) {\n      this._applyEnvelope(pbInfo);\n    }\n\n    const pbBuffer = pbInfo.type.encode(pbInfo.msg).finish();\n    const buffer = new Uint8Array(pbBuffer.byteLength + 4);\n    buffer.set(XVIZ_PROTOBUF_MAGIC, 0);\n    buffer.set(pbBuffer, 4);\n    this.writeToSink(`${messageName(messageIndex)}.pbe`, buffer);\n  }\n\n  // Apply protobuf structure for the Any type used in the envelope\n  _applyEnvelope(info) {\n    if (info.type === XVIZ_PROTOBUF_MESSAGE.Metadata) {\n      const value = info.type.encode(info.msg).finish();\n      info.type = XVIZ_PROTOBUF_MESSAGE.Envelope;\n      info.msg = info.type.fromObject({\n        type: 'xviz/metadata',\n        data: {type_url: 'xviz.v2.Metadata', value}\n      });\n    } else if (info.type === XVIZ_PROTOBUF_MESSAGE.StateUpdate) {\n      const value = info.type.encode(info.msg).finish();\n      info.type = XVIZ_PROTOBUF_MESSAGE.Envelope;\n      info.msg = info.type.fromObject({\n        type: 'xviz/state_update',\n        data: {type_url: 'xviz.v2.StateUpdate', value}\n      });\n    }\n  }\n\n  _writeMessageIndex() {\n    this._checkValid();\n    const {startTime, endTime, messages} = this.messageTimings;\n    const messageTimings = {};\n\n    if (startTime) {\n      messageTimings.startTime = startTime;\n    }\n\n    if (endTime) {\n      messageTimings.endTime = endTime;\n    }\n\n    // Sort messages by index before writing out as an array\n    const messageTimes = Array.from(messages.keys()).sort((a, b) => a - b);\n\n    const timing = [];\n    messageTimes.forEach((value, index) => {\n      // Value is two greater than message index\n      const limit = timing.length;\n      if (value > limit) {\n        // Adding 2 because 1-frame is metadata file, so message data starts at 2\n        throw new Error(\n          `Error writing time index file. Messages are missing between ${limit + 2} and ${value +\n            2}`\n        );\n      }\n\n      timing.push(messages.get(value));\n    });\n    messageTimings.timing = timing;\n\n    const msg = JSON.stringify(messageTimings);\n    this.writeToSink('0-frame.json', msg);\n    this.wroteMessageIndex = timing.length;\n  }\n\n  close() {\n    if (this.sink) {\n      if (!this.wroteMessageIndex) {\n        this._writeMessageIndex();\n      }\n\n      super.close();\n    }\n  }\n\n  /* eslint-disable camelcase */\n  _saveTimestamp(xviz_data, index) {\n    const {log_info, updates} = xviz_data;\n\n    if (index === undefined) {\n      // Metadata case\n      if (log_info) {\n        const {start_time, end_time} = log_info || {};\n        if (start_time) {\n          this.messageTimings.startTime = start_time;\n        }\n\n        if (end_time) {\n          this.messageTimings.endTime = end_time;\n        }\n      }\n    } else if (updates) {\n      if (updates.length === 0 || !updates.every(update => typeof update.timestamp === 'number')) {\n        throw new Error('XVIZ updates did not contain a valid timestamp');\n      }\n\n      const min = Math.min(updates.map(update => update.timestamp));\n      const max = Math.max(updates.map(update => update.timestamp));\n\n      this.messageTimings.messages.set(index, [min, max, index, messageName(index)]);\n    } else {\n      // Missing updates & index is invalid call\n      throw new Error('Cannot find timestamp');\n    }\n  }\n  /* eslint-enable camelcase */\n\n  writeToSink(name, msg) {\n    this.sink.writeSync(name, msg);\n  }\n}\n\nconst COLOR_KEYS = ['stroke_color', 'fill_color'];\n/* Convert color to a flattened array */\nfunction toColorArray(object) {\n  const clrs = object.substring(1);\n  const len = clrs.length;\n  if (!(len === 3 || len === 4 || len === 6 || len === 8)) {\n    return null;\n  }\n\n  const color = [];\n  const step = clrs.length === 3 || clrs.length === 4 ? 1 : 2;\n  for (let i = 0; i < clrs.length; i += step) {\n    color.push(parseInt(clrs.substr(i, step), 16));\n  }\n\n  return color;\n}\n\n// Protobuf messages do not allow variations on the field types, such\n// as a color field that supports both 'string' and 'array' data in JSON.\n//\n// This function will normalize the object, generally produced by an XVIZBuilder,\n// to allow it to be encoded per our protobuf message definitions. It will change\n// the variation of particular fields into a normalized format.\n//\n// Recursively walk object performing the following conversions\n// - primitives with typed array fields are turned into arrays\n// - primtives of type image have the data turned into a base64 string\n/* eslint-disable complexity, no-else-return, max-statements */\nexport function xvizConvertProtobuf(object, keyName) {\n  if (Array.isArray(object)) {\n    if (!(keyName === 'vertices' || keyName === 'points' || keyName === 'colors')) {\n      return object.map(element => xvizConvertProtobuf(element, keyName));\n    }\n\n    // Handle the following cases\n    // [ [x, y, z], [x, y, z], ...]\n    // [ TypedArray{x, y, z}, TypedArray{x, y ,z} ]\n    // [ x, y, z, x, y, z, ... ]\n    // [ {}, {}, ... ]\n    if (Array.isArray(object[0])) {\n      const flat = [];\n      object.forEach(el => flat.push(...el));\n      return flat;\n    } else if (ArrayBuffer.isView(object[0])) {\n      const flat = [];\n      object.forEach(el => flat.push(...Array.from(el)));\n      return flat;\n    } else if (Number.isFinite(object[0])) {\n      return object;\n    } else if (typeof object[0] === 'object') {\n      return object.map(element => xvizConvertProtobuf(element, keyName));\n    }\n  }\n\n  // Typed arrays become normal arrays\n  if (ArrayBuffer.isView(object)) {\n    return Array.from(object);\n  }\n\n  if (COLOR_KEYS.includes(keyName)) {\n    if (typeof object === 'string' && object.match(/^#([0-9a-f]{3,4})|([0-9a-f]{6,8})$/i)) {\n      return toColorArray(object);\n    }\n  }\n\n  if (object !== null && typeof object === 'object') {\n    // Handle XVIZ Image Primitive\n    const properties = Object.keys(object);\n    if (properties.includes('data') && keyName === 'images') {\n      // TODO: should verify it is a typed array and if not convert it to one\n      return object;\n    }\n\n    // Handle all other objects\n    const newObject = {};\n    const objectKeys = Object.keys(object);\n    for (const key of objectKeys) {\n      // console.log(key)\n      newObject[key] = xvizConvertProtobuf(object[key], key);\n    }\n    return newObject;\n  }\n\n  return object;\n}\n/* eslint-enable complexity */\n"],"mappings":"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"}