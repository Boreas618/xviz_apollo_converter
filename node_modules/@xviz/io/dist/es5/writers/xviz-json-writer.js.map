{"version":3,"file":"xviz-json-writer.js","names":["messageName","index","XVIZJSONWriter","sink","options","envelope","precision","asArrayBuffer","messageTimings","messages","Map","wroteMessageIndex","xvizMetadata","_checkValid","_saveTimestamp","XVIZEnvelope","Metadata","msg","JSON","stringify","writeToSink","messageIndex","xvizMessage","StateUpdate","numberRounder","k","value","Number","toFixed","jsonXVIZMessage","xvizConvertJson","startTime","endTime","messageTimes","Array","from","keys","sort","a","b","timing","forEach","limit","length","Error","push","get","_writeMessageIndex","xviz_data","log_info","updates","undefined","start_time","end_time","every","update","timestamp","min","Math","map","max","set","name","encoder","TextEncoder","encode","writeSync","XVIZBaseWriter"],"sources":["../../../src/writers/xviz-json-writer.js"],"sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {XVIZBaseWriter} from './xviz-base-writer';\nimport {xvizConvertJson} from './xviz-json-encoder';\nimport {TextEncoder} from '../common/text-encoding';\nimport {XVIZEnvelope} from '@xviz/io';\n\n// 0-frame is an index file for timestamp metadata\n// 1-frame is the metadata file for the log\n// 2-frame is where the actual XVIZ updates begin\nconst messageName = index => `${index + 2}-frame`;\n\nexport class XVIZJSONWriter extends XVIZBaseWriter {\n  constructor(sink, options = {}) {\n    super(sink);\n\n    const {envelope = true, precision = 10, asArrayBuffer = false} = options;\n    this.messageTimings = {\n      messages: new Map()\n    };\n    this.wroteMessageIndex = null;\n    this.options = {envelope, precision, asArrayBuffer};\n  }\n\n  // xvizMetadata is the object returned\n  // from a Builder.\n  writeMetadata(xvizMetadata) {\n    this._checkValid();\n    this._saveTimestamp(xvizMetadata);\n\n    if (this.options.envelope) {\n      xvizMetadata = XVIZEnvelope.Metadata(xvizMetadata);\n    }\n\n    const msg = JSON.stringify(xvizMetadata);\n    this.writeToSink('1-frame.json', msg);\n  }\n\n  writeMessage(messageIndex, xvizMessage) {\n    this._checkValid();\n    this._saveTimestamp(xvizMessage, messageIndex);\n\n    if (this.options.envelope) {\n      xvizMessage = XVIZEnvelope.StateUpdate(xvizMessage);\n    }\n\n    // Limit precision to save space\n    const numberRounder = (k, value) => {\n      if (typeof value === 'number') {\n        return Number(value.toFixed(this.options.precision));\n      }\n\n      return value;\n    };\n\n    const jsonXVIZMessage = xvizConvertJson(xvizMessage);\n    const msg = JSON.stringify(jsonXVIZMessage, numberRounder);\n    this.writeToSink(`${messageName(messageIndex)}.json`, msg);\n  }\n\n  _writeMessageIndex() {\n    this._checkValid();\n    const {startTime, endTime, messages} = this.messageTimings;\n    const messageTimings = {};\n\n    if (startTime) {\n      messageTimings.startTime = startTime;\n    }\n\n    if (endTime) {\n      messageTimings.endTime = endTime;\n    }\n\n    // Sort messages by index before writing out as an array\n    const messageTimes = Array.from(messages.keys()).sort((a, b) => a - b);\n\n    const timing = [];\n    messageTimes.forEach((value, index) => {\n      // Value is two greater than message index\n      const limit = timing.length;\n      if (value > limit) {\n        // Adding 2 because 1-frame is metadata file, so message data starts at 2\n        throw new Error(\n          `Error writing time index file. Messages are missing between ${limit + 2} and ${value +\n            2}`\n        );\n      }\n\n      timing.push(messages.get(value));\n    });\n    messageTimings.timing = timing;\n\n    const msg = JSON.stringify(messageTimings);\n    this.writeToSink('0-frame.json', msg);\n    this.wroteMessageIndex = timing.length;\n  }\n\n  close() {\n    if (this.sink) {\n      if (!this.wroteMessageIndex) {\n        this._writeMessageIndex();\n      }\n\n      super.close();\n    }\n  }\n\n  /* eslint-disable camelcase */\n  _saveTimestamp(xviz_data, index) {\n    const {log_info, updates} = xviz_data;\n\n    if (index === undefined) {\n      // Metadata case\n      if (log_info) {\n        const {start_time, end_time} = log_info || {};\n        if (start_time) {\n          this.messageTimings.startTime = start_time;\n        }\n\n        if (end_time) {\n          this.messageTimings.endTime = end_time;\n        }\n      }\n    } else if (updates) {\n      if (updates.length === 0 || !updates.every(update => typeof update.timestamp === 'number')) {\n        throw new Error('XVIZ updates did not contain a valid timestamp');\n      }\n\n      const min = Math.min(updates.map(update => update.timestamp));\n      const max = Math.max(updates.map(update => update.timestamp));\n\n      this.messageTimings.messages.set(index, [min, max, index, messageName(index)]);\n    } else {\n      // Missing updates & index is invalid call\n      throw new Error('Cannot find timestamp');\n    }\n  }\n  /* eslint-enable camelcase */\n\n  writeToSink(name, msg) {\n    if (this.options.asArrayBuffer) {\n      const encoder = new TextEncoder();\n      // TODO: measure this as it is likely expensive\n      msg = encoder.encode(msg);\n    }\n\n    this.sink.writeSync(name, msg);\n  }\n}\n"],"mappings":"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"}