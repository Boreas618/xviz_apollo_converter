{"version":3,"file":"xviz-variable-builder.js","names":["XVIZVariableBuilder","props","category","CATEGORY","VARIABLE","_data","Map","_id","_values","identifier","validatePropSetOnce","values","Array","validateError","_flush","size","variablesData","streamId","ids","variables","forEach","entry","push","_dataPending","fieldName","value","String","base","object_id","streamEntry","get","_streamId","idEntry","set","validateWarn","_validate","_addVariableEntry","_reset","XVIZBaseBuilder"],"sources":["../../../src/builders/xviz-variable-builder.js"],"sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {CATEGORY} from './constant';\nimport XVIZBaseBuilder from './xviz-base-builder';\n\n/**\n * XVIZVariableBuilder manages a dictionary of streams -> variables, where\n * variables is an array of objects with values & id.\n *\n * This is the shape returned from getData()\n *\n * {\n *   /plan/time: {\n *     variables: [\n *       {\n *         base: {\n *           object_id: '123'\n *         },\n *         values: [1, 2, 3, 4],\n *       }\n *     ]\n *   }\n * }\n */\nexport default class XVIZVariableBuilder extends XVIZBaseBuilder {\n  constructor(props) {\n    super({\n      ...props,\n      category: CATEGORY.VARIABLE\n    });\n\n    // Stores variable data by stream then id\n    // They will then be group when constructing final object\n    this._data = new Map();\n\n    // inflight builder data\n    this._id = null;\n    this._values = null;\n  }\n\n  id(identifier) {\n    this.validatePropSetOnce('_id');\n    this._id = identifier;\n    return this;\n  }\n\n  values(values) {\n    this.validatePropSetOnce('_values');\n\n    if (!(values instanceof Array)) {\n      this.validateError('Input `values` must be array');\n    }\n\n    this._values = values;\n    return this;\n  }\n\n  getData() {\n    this._flush();\n    if (this._data.size === 0) {\n      return null;\n    }\n\n    const variablesData = {};\n    for (const [streamId, ids] of this._data) {\n      const variables = [];\n      ids.forEach(entry => variables.push(entry));\n      variablesData[streamId] = {variables};\n    }\n\n    return variablesData;\n  }\n\n  // Lookup by stream, then id to store [values, id]]\n  _addVariableEntry() {\n    if (!this._dataPending()) {\n      return;\n    }\n\n    // Lookup where to put the value\n    let fieldName = 'doubles';\n    const value = this._values[0];\n    if (typeof value === 'string' || value instanceof String) {\n      fieldName = 'strings';\n    } else if (typeof value === 'boolean') {\n      fieldName = 'bools';\n    }\n\n    const entry = {values: {[fieldName]: this._values}};\n    if (this._id) {\n      entry.base = {object_id: this._id}; // eslint-disable-line camelcase\n    }\n\n    const streamEntry = this._data.get(this._streamId);\n    if (streamEntry) {\n      // We have stream, now get id\n      const idEntry = streamEntry.get(this._id);\n      if (idEntry) {\n        // already have values for this objet\n        this.validateError(`Input \\`values\\` already set for id ${this._id}`);\n      } else {\n        // create new mapping of id -> entry\n        streamEntry.set(this._id, entry);\n      }\n    } else {\n      // No stream\n      // create new stream -> id\n      const idEntry = new Map();\n      idEntry.set(this._id, entry);\n      // create stream entry\n      this._data.set(this._streamId, idEntry);\n    }\n  }\n\n  _dataPending() {\n    return this._values !== null || this._id !== null;\n  }\n\n  _validate() {\n    if (this._dataPending()) {\n      super._validate();\n\n      if (this._values === null) {\n        this.validateWarn(`Stream${this._streamId} values are not provided.`);\n      }\n    }\n  }\n\n  _flush() {\n    this._validate();\n\n    this._addVariableEntry();\n    this._reset();\n  }\n\n  // reset the inflight values\n  _reset() {\n    this._id = null;\n    this._values = null;\n  }\n}\n"],"mappings":"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"}