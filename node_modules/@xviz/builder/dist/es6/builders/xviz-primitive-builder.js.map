{"version":3,"file":"xviz-primitive-builder.js","names":["XVIZBaseBuilder","CATEGORY","PRIMITIVE_TYPES","XVIZPrimitiveBuilder","constructor","props","category","PRIMITIVE","reset","_primitives","image","data","_type","_flush","Uint8Array","validateError","validatePropSetOnce","_image","dimensions","widthPixel","heightPixel","width_px","height_px","polygon","vertices","_vertices","polyline","points","point","circle","position","radius","_radius","stadium","start","end","length","text","message","_text","colors","colorArray","_colors","style","_validatePrerequisite","_style","_validateStyle","id","identifier","_id","classes","classList","_classes","_validate","isImage","validateWarn","_streamId","_flushPrimitives","getData","Object","keys","stream","primitive","_formatPrimitive","arrayFieldName","array","undefined","push","obj","center","assign","haveBase","base","object_id","_validator","validateStyle"],"sources":["../../../src/builders/xviz-primitive-builder.js"],"sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/* eslint-disable camelcase */\nimport XVIZBaseBuilder from './xviz-base-builder';\nimport {CATEGORY, PRIMITIVE_TYPES} from './constant';\n\nexport default class XVIZPrimitiveBuilder extends XVIZBaseBuilder {\n  constructor(props) {\n    super({\n      category: CATEGORY.PRIMITIVE,\n      ...props\n    });\n\n    this.reset();\n    // primitives: {[streamId]: []}\n    this._primitives = {};\n  }\n\n  image(data) {\n    if (this._type) {\n      this._flush();\n    }\n\n    if (!(data instanceof Uint8Array || typeof data === 'string')) {\n      this.validateError('An image data must be a string or Uint8Array.');\n    }\n\n    this.validatePropSetOnce('_image');\n    this._type = PRIMITIVE_TYPES.image;\n\n    this._image = {\n      data\n    };\n\n    return this;\n  }\n\n  dimensions(widthPixel = null, heightPixel = null) {\n    if (!this._image) {\n      this.validateError('An image needs to be set first.');\n    }\n\n    this._image.width_px = widthPixel;\n    this._image.height_px = heightPixel;\n\n    return this;\n  }\n\n  polygon(vertices) {\n    if (this._type) {\n      this._flush();\n    }\n\n    this.validatePropSetOnce('_vertices');\n\n    this._vertices = vertices;\n    this._type = PRIMITIVE_TYPES.polygon;\n\n    return this;\n  }\n\n  polyline(vertices) {\n    if (this._type) {\n      this._flush();\n    }\n\n    this.validatePropSetOnce('_vertices');\n\n    this._vertices = vertices;\n    this._type = PRIMITIVE_TYPES.polyline;\n\n    return this;\n  }\n\n  points(vertices) {\n    if (this._type) {\n      this._flush();\n    }\n\n    this.validatePropSetOnce('_vertices');\n\n    this._vertices = vertices;\n    this._type = PRIMITIVE_TYPES.point;\n\n    return this;\n  }\n\n  circle(position, radius) {\n    if (this._type) {\n      this._flush();\n    }\n\n    this.validatePropSetOnce('_radius');\n\n    this.position(position);\n\n    this._radius = radius;\n    this._type = PRIMITIVE_TYPES.circle;\n\n    return this;\n  }\n\n  stadium(start, end, radius) {\n    if (this._type) {\n      this._flush();\n    }\n\n    this.validatePropSetOnce('_radius');\n\n    if (start.length !== 3) {\n      this.validateError(\n        `The start position must be of the form [x, y, z] where ${start} was provided`\n      );\n    }\n\n    if (end.length !== 3) {\n      this.validateError(\n        `The end position must be of the form [x, y, z] where ${end} was provided`\n      );\n    }\n\n    this._vertices = [start, end];\n    this._radius = radius;\n    this._type = PRIMITIVE_TYPES.stadium;\n\n    return this;\n  }\n\n  // TODO/Xintong validate `text` primitive\n  text(message) {\n    if (this._type) {\n      this._flush();\n    }\n\n    this._text = message;\n    this._type = 'text';\n    return this;\n  }\n\n  position(point) {\n    this.validatePropSetOnce('_vertices');\n\n    if (point.length !== 3) {\n      this.validateError(`A position must be of the form [x, y, z] where ${point} was provided`);\n    }\n\n    this._vertices = [point];\n    return this;\n  }\n\n  colors(colorArray) {\n    this.validatePropSetOnce('_colors');\n\n    this._colors = colorArray;\n    return this;\n  }\n\n  style(style) {\n    this._validatePrerequisite();\n    this.validatePropSetOnce('_style');\n\n    this._style = style;\n\n    this._validateStyle();\n\n    return this;\n  }\n\n  id(identifier) {\n    this._validatePrerequisite();\n    this.validatePropSetOnce('_id');\n\n    this._id = identifier;\n    return this;\n  }\n\n  classes(classList) {\n    this._validatePrerequisite();\n    this.validatePropSetOnce('_classes');\n\n    this._classes = classList;\n    return this;\n  }\n\n  _validate() {\n    super._validate();\n\n    const isImage = this._type === PRIMITIVE_TYPES.image;\n    if (isImage && (!this._image || !this._image.data)) {\n      this.validateWarn(`Stream ${this._streamId} image data are not provided.`);\n    }\n    if (!isImage && !this._vertices) {\n      this.validateWarn(`Stream ${this._streamId} primitives vertices are not provided.`);\n    }\n  }\n\n  _flush() {\n    this._validate();\n    this._flushPrimitives();\n  }\n\n  getData() {\n    if (this._type) {\n      this._flush();\n    }\n\n    if (Object.keys(this._primitives).length === 0) {\n      return null;\n    }\n\n    return this._primitives;\n  }\n\n  _validatePrerequisite() {\n    if (!this._type) {\n      this.validateError('Start from a primitive first, e.g polygon(), image(), etc.');\n    }\n  }\n\n  _flushPrimitives() {\n    let stream = this._primitives[this._streamId];\n    if (!stream) {\n      stream = {};\n      this._primitives[this._streamId] = stream;\n    }\n\n    const primitive = this._formatPrimitive();\n\n    // Each type like \"image\" has an \"images\" array, this hack saves a\n    // big switch statement.\n    const arrayFieldName = `${this._type}s`;\n    let array = stream[arrayFieldName];\n\n    // Make sure array exists\n    if (array === undefined) {\n      array = [];\n      stream[arrayFieldName] = array;\n    }\n\n    // Now add the primitive to it\n    array.push(primitive);\n\n    this.reset();\n  }\n\n  /* eslint-disable complexity */\n  _formatPrimitive() {\n    const obj = {};\n\n    switch (this._type) {\n      case 'polygon':\n      case 'polyline':\n        obj.vertices = this._vertices;\n        break;\n      case 'point':\n        if (this._colors) {\n          obj.colors = this._colors;\n        }\n        obj.points = this._vertices;\n        break;\n      case 'text':\n        obj.position = this._vertices[0];\n        obj.text = this._text;\n        break;\n      case 'circle':\n        obj.center = this._vertices[0];\n        obj.radius = this._radius;\n        break;\n      case 'stadium':\n        obj.start = this._vertices[0];\n        obj.end = this._vertices[1];\n        obj.radius = this._radius;\n        break;\n      case 'image':\n        if (this._vertices) {\n          this._image.position = this._vertices[0];\n        }\n        Object.assign(obj, this._image);\n        break;\n      default:\n    }\n\n    let haveBase = false;\n    const base = {};\n\n    if (this._id) {\n      haveBase = true;\n      base.object_id = this._id;\n    }\n\n    if (this._style) {\n      haveBase = true;\n      base.style = this._style;\n    }\n\n    if (this._classes) {\n      haveBase = true;\n      base.classes = this._classes;\n    }\n\n    if (haveBase) {\n      obj.base = base;\n    }\n\n    return obj;\n  }\n  /* eslint-enable complexity */\n\n  _validateStyle() {\n    this._validator.validateStyle(this);\n  }\n\n  reset() {\n    this._type = null;\n\n    this._image = null;\n    this._vertices = null;\n    this._radius = null;\n    this._text = null;\n    this._colors = null;\n\n    this._id = null;\n    this._style = null;\n    this._classes = null;\n  }\n}\n"],"mappings":"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"}