{"version":3,"file":"xviz-variable-builder.js","names":["CATEGORY","XVIZBaseBuilder","XVIZVariableBuilder","constructor","props","category","VARIABLE","_data","Map","_id","_values","id","identifier","validatePropSetOnce","values","Array","validateError","getData","_flush","size","variablesData","streamId","ids","variables","forEach","entry","push","_addVariableEntry","_dataPending","fieldName","value","String","base","object_id","streamEntry","get","_streamId","idEntry","set","_validate","validateWarn","_reset"],"sources":["../../../src/builders/xviz-variable-builder.js"],"sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {CATEGORY} from './constant';\nimport XVIZBaseBuilder from './xviz-base-builder';\n\n/**\n * XVIZVariableBuilder manages a dictionary of streams -> variables, where\n * variables is an array of objects with values & id.\n *\n * This is the shape returned from getData()\n *\n * {\n *   /plan/time: {\n *     variables: [\n *       {\n *         base: {\n *           object_id: '123'\n *         },\n *         values: [1, 2, 3, 4],\n *       }\n *     ]\n *   }\n * }\n */\nexport default class XVIZVariableBuilder extends XVIZBaseBuilder {\n  constructor(props) {\n    super({\n      ...props,\n      category: CATEGORY.VARIABLE\n    });\n\n    // Stores variable data by stream then id\n    // They will then be group when constructing final object\n    this._data = new Map();\n\n    // inflight builder data\n    this._id = null;\n    this._values = null;\n  }\n\n  id(identifier) {\n    this.validatePropSetOnce('_id');\n    this._id = identifier;\n    return this;\n  }\n\n  values(values) {\n    this.validatePropSetOnce('_values');\n\n    if (!(values instanceof Array)) {\n      this.validateError('Input `values` must be array');\n    }\n\n    this._values = values;\n    return this;\n  }\n\n  getData() {\n    this._flush();\n    if (this._data.size === 0) {\n      return null;\n    }\n\n    const variablesData = {};\n    for (const [streamId, ids] of this._data) {\n      const variables = [];\n      ids.forEach(entry => variables.push(entry));\n      variablesData[streamId] = {variables};\n    }\n\n    return variablesData;\n  }\n\n  // Lookup by stream, then id to store [values, id]]\n  _addVariableEntry() {\n    if (!this._dataPending()) {\n      return;\n    }\n\n    // Lookup where to put the value\n    let fieldName = 'doubles';\n    const value = this._values[0];\n    if (typeof value === 'string' || value instanceof String) {\n      fieldName = 'strings';\n    } else if (typeof value === 'boolean') {\n      fieldName = 'bools';\n    }\n\n    const entry = {values: {[fieldName]: this._values}};\n    if (this._id) {\n      entry.base = {object_id: this._id}; // eslint-disable-line camelcase\n    }\n\n    const streamEntry = this._data.get(this._streamId);\n    if (streamEntry) {\n      // We have stream, now get id\n      const idEntry = streamEntry.get(this._id);\n      if (idEntry) {\n        // already have values for this objet\n        this.validateError(`Input \\`values\\` already set for id ${this._id}`);\n      } else {\n        // create new mapping of id -> entry\n        streamEntry.set(this._id, entry);\n      }\n    } else {\n      // No stream\n      // create new stream -> id\n      const idEntry = new Map();\n      idEntry.set(this._id, entry);\n      // create stream entry\n      this._data.set(this._streamId, idEntry);\n    }\n  }\n\n  _dataPending() {\n    return this._values !== null || this._id !== null;\n  }\n\n  _validate() {\n    if (this._dataPending()) {\n      super._validate();\n\n      if (this._values === null) {\n        this.validateWarn(`Stream${this._streamId} values are not provided.`);\n      }\n    }\n  }\n\n  _flush() {\n    this._validate();\n\n    this._addVariableEntry();\n    this._reset();\n  }\n\n  // reset the inflight values\n  _reset() {\n    this._id = null;\n    this._values = null;\n  }\n}\n"],"mappings":"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"}