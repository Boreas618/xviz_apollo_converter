{"version":3,"file":"xviz-json-encoder.js","names":["base64js","xvizConvertJson","object","keyName","nestedDepth","Array","isArray","map","element","ArrayBuffer","isView","from","length","Error","newObject","count","i","push","slice","properties","Object","keys","includes","data","fromByteArray","key"],"sources":["../../../../src/writers/xviz-writer/xviz-json-encoder.js"],"sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport base64js from 'base64-js';\n\n// Recursively walk object performing the following conversions\n// - primitives with typed array fields are turned into arrays\n// - primtives of type image have the data turned into a base64 string\n/* eslint-disable complexity */\nexport function xvizConvertJson(object, keyName, nestedDepth = 0) {\n  if (Array.isArray(object)) {\n    return object.map(element => xvizConvertJson(element, keyName, nestedDepth + 1));\n  }\n\n  // Typed arrays become normal arrays\n  // TODO: no way to know if this should be 3 or 4\n  if (ArrayBuffer.isView(object)) {\n    // Return normal arrays\n    if (!(keyName === 'vertices' || keyName === 'points') || nestedDepth > 0) {\n      return Array.from(object);\n    }\n\n    // For primitives with key's 'vertices', we force nested arrays.\n    // TODO(twojtasz): Support flat arrays\n    const length = object.length;\n    if (length % 3 !== 0) {\n      throw new Error('TypeArray conversion failure. The array is expect to be divisible by 3');\n    }\n\n    // Construct points from flattened array\n    const newObject = [];\n    const count = length / 3;\n    for (let i = 0; i < count; i++) {\n      newObject.push(Array.from(object.slice(i * 3, i * 3 + 3)));\n    }\n    return newObject;\n  }\n\n  if (object !== null && typeof object === 'object') {\n    // Handle XVIZ Image Primitive\n    const properties = Object.keys(object);\n    if (properties.includes('data') && keyName === 'images') {\n      return {\n        ...object,\n        data: base64js.fromByteArray(object.data)\n      };\n    }\n\n    // Handle all other objects\n    const newObject = {};\n    for (const key in object) {\n      newObject[key] = xvizConvertJson(object[key], key);\n    }\n    return newObject;\n  }\n\n  return object;\n}\n/* eslint-enable complexity */\n"],"mappings":";;;;;;AAcA,OAAOA,QAAP,MAAqB,WAArB;AAMA,OAAO,SAASC,eAAT,CAAyBC,MAAzB,EAAiCC,OAAjC,EAA2D;EAAA,IAAjBC,WAAiB,uEAAH,CAAG;;EAChE,IAAIC,KAAK,CAACC,OAAN,CAAcJ,MAAd,CAAJ,EAA2B;IACzB,OAAOA,MAAM,CAACK,GAAP,CAAWC,OAAO,IAAIP,eAAe,CAACO,OAAD,EAAUL,OAAV,EAAmBC,WAAW,GAAG,CAAjC,CAArC,CAAP;EACD;;EAID,IAAIK,WAAW,CAACC,MAAZ,CAAmBR,MAAnB,CAAJ,EAAgC;IAE9B,IAAI,EAAEC,OAAO,KAAK,UAAZ,IAA0BA,OAAO,KAAK,QAAxC,KAAqDC,WAAW,GAAG,CAAvE,EAA0E;MACxE,OAAOC,KAAK,CAACM,IAAN,CAAWT,MAAX,CAAP;IACD;;IAID,MAAMU,MAAM,GAAGV,MAAM,CAACU,MAAtB;;IACA,IAAIA,MAAM,GAAG,CAAT,KAAe,CAAnB,EAAsB;MACpB,MAAM,IAAIC,KAAJ,CAAU,wEAAV,CAAN;IACD;;IAGD,MAAMC,SAAS,GAAG,EAAlB;IACA,MAAMC,KAAK,GAAGH,MAAM,GAAG,CAAvB;;IACA,KAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,KAApB,EAA2BC,CAAC,EAA5B,EAAgC;MAC9BF,SAAS,CAACG,IAAV,CAAeZ,KAAK,CAACM,IAAN,CAAWT,MAAM,CAACgB,KAAP,CAAaF,CAAC,GAAG,CAAjB,EAAoBA,CAAC,GAAG,CAAJ,GAAQ,CAA5B,CAAX,CAAf;IACD;;IACD,OAAOF,SAAP;EACD;;EAED,IAAIZ,MAAM,KAAK,IAAX,IAAmB,OAAOA,MAAP,KAAkB,QAAzC,EAAmD;IAEjD,MAAMiB,UAAU,GAAGC,MAAM,CAACC,IAAP,CAAYnB,MAAZ,CAAnB;;IACA,IAAIiB,UAAU,CAACG,QAAX,CAAoB,MAApB,KAA+BnB,OAAO,KAAK,QAA/C,EAAyD;MACvD,uCACKD,MADL;QAEEqB,IAAI,EAAEvB,QAAQ,CAACwB,aAAT,CAAuBtB,MAAM,CAACqB,IAA9B;MAFR;IAID;;IAGD,MAAMT,SAAS,GAAG,EAAlB;;IACA,KAAK,MAAMW,GAAX,IAAkBvB,MAAlB,EAA0B;MACxBY,SAAS,CAACW,GAAD,CAAT,GAAiBxB,eAAe,CAACC,MAAM,CAACuB,GAAD,CAAP,EAAcA,GAAd,CAAhC;IACD;;IACD,OAAOX,SAAP;EACD;;EAED,OAAOZ,MAAP;AACD"}