{"version":3,"file":"session-validator.js","names":["SessionState","Object","freeze","DISCONNECTED","CONNECTED","LOG_SESSION_INITIALIZING","LOG_SESSION_ACTIVE","TRANSFORMING_LOG","LIVE_SESSION_INITIALIZING","LIVE_SESSION_ACTIVE","MessageTypes","START","ERROR","METADATA","TRANSFORM_LOG","STATE_UPDATE","TRANSFORM_LOG_DONE","SchemaNames","TransitionTable","msg","session_type","XVIZSessionValidator","options","verbose","msgValidator","XVIZValidator","state","resetState","processMessage","lastMessage","stats","stateErrors","msgType","recordMessage","runTransition","messages","schemaName","undefined","Error","validate","e","ValidationError","errMsg","toString","uniqueErrors","newError","validationErrors","invalidCallback","validTransitions","nextState"],"sources":["../../src/session-validator.js"],"sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {ValidationError, XVIZValidator} from './validator';\n\n// I am not using symbols here because they don't work with maps an test libraries...\nconst SessionState = Object.freeze({\n  DISCONNECTED: 'DISCONNECTED',\n  CONNECTED: 'CONNECTED',\n\n  LOG_SESSION_INITIALIZING: 'LOG_SESSION_INITIALIZING',\n  LOG_SESSION_ACTIVE: 'LOG_SESSION_ACTIVE',\n  TRANSFORMING_LOG: 'TRANSFORMING_LOG',\n\n  LIVE_SESSION_INITIALIZING: 'LIVE_SESSION_INITIALIZING',\n  LIVE_SESSION_ACTIVE: 'LIVE_SESSION_ACTIVE'\n});\n\nexport const MessageTypes = Object.freeze({\n  START: 'START',\n  ERROR: 'ERROR',\n  METADATA: 'METADATA',\n  TRANSFORM_LOG: 'TRANSFORM_LOG',\n  STATE_UPDATE: 'STATE_UPDATE',\n  TRANSFORM_LOG_DONE: 'TRANSFORM_LOG_DONE'\n});\n\nconst SchemaNames = Object.freeze({\n  START: 'session/start',\n  ERROR: 'session/error',\n  METADATA: 'session/metadata',\n  TRANSFORM_LOG: 'session/transform_log',\n  STATE_UPDATE: 'session/state_update',\n  TRANSFORM_LOG_DONE: 'session/transform_log_done'\n});\n\n// Maps state to message that provoke next state\nconst TransitionTable = Object.freeze({\n  // No message transitions for disconnection\n  DISCONNECTED: {},\n\n  CONNECTED: {\n    START: msg => {\n      if (msg) {\n        if (msg.session_type === 'LIVE') {\n          return SessionState.LIVE_SESSION_INITIALIZING;\n        }\n      }\n      return SessionState.LOG_SESSION_INITIALIZING;\n    }\n  },\n\n  LOG_SESSION_INITIALIZING: {\n    ERROR: SessionState.DISCONNECTED,\n    METADATA: SessionState.LOG_SESSION_ACTIVE\n  },\n\n  LOG_SESSION_ACTIVE: {\n    TRANSFORM_LOG: SessionState.TRANSFORMING_LOG\n  },\n\n  TRANSFORMING_LOG: {\n    STATE_UPDATE: SessionState.TRANSFORMING_LOG,\n    ERROR: SessionState.TRANSFORMING_LOG,\n    TRANSFORM_LOG_DONE: SessionState.LOG_SESSION_ACTIVE\n  },\n\n  LIVE_SESSION_INITIALIZING: {\n    ERROR: SessionState.DISCONNECTED,\n    METADATA: SessionState.LIVE_SESSION_ACTIVE\n  },\n\n  LIVE_SESSION_ACTIVE: {\n    STATE_UPDATE: SessionState.LIVE_SESSION_ACTIVE,\n    ERROR: SessionState.LIVE_SESSION_ACTIVE\n  }\n});\n\n// This class encodes the XVIZ protocol session state machine, and checks\n// a message flow against it.  It can be used by a client to ensure a\n// server is sending the right messages, in the right order, and that are\n// contain valid data.\nexport class XVIZSessionValidator {\n  constructor(options = {verbose: false}) {\n    this.options = options;\n    this.msgValidator = new XVIZValidator();\n    this.state = SessionState.DISCONNECTED;\n    this.resetState();\n  }\n\n  onConnect() {\n    this.state = SessionState.CONNECTED;\n    this.resetState();\n  }\n\n  onStart(msg) {\n    this.processMessage(msg, MessageTypes.START);\n  }\n\n  onError(msg) {\n    this.processMessage(msg, MessageTypes.ERROR);\n  }\n\n  onMetadata(msg) {\n    this.processMessage(msg, MessageTypes.METADATA);\n  }\n\n  onTransformLog(msg) {\n    this.processMessage(msg, MessageTypes.TRANSFORM_LOG);\n  }\n\n  onStateUpdate(msg) {\n    this.processMessage(msg, MessageTypes.STATE_UPDATE);\n  }\n\n  onTransformLogDone(msg) {\n    this.processMessage(msg, MessageTypes.TRANSFORM_LOG_DONE);\n  }\n\n  // Denote the connection has been closed\n  onClose() {\n    this.state = SessionState.DISCONNECTED;\n\n    if (this.lastMessage !== MessageTypes.ERROR) {\n      this.stats.stateErrors[this.state] = 'Close should only happen on error';\n    }\n  }\n\n  // Record, validate and update protocol state machine\n  processMessage(msg, msgType) {\n    this.recordMessage(msg, msgType);\n\n    this.runTransition(msg, msgType);\n  }\n\n  // Count and validate the message we have received\n  recordMessage(msg, msgType) {\n    this.lastMessage = msgType;\n    this.stats.messages[msgType] = this.stats.messages[msgType] + 1 || 1;\n\n    const schemaName = SchemaNames[msgType];\n\n    if (schemaName === undefined) {\n      throw Error(`\"${msgType}\" does not have a schema name`);\n    }\n\n    try {\n      this.msgValidator.validate(schemaName, msg);\n    } catch (e) {\n      if (e instanceof ValidationError) {\n        // Gather unique errors per item\n        const errMsg = e.toString();\n        let uniqueErrors = this.stats.uniqueErrors[msgType];\n        const newError = uniqueErrors === undefined;\n\n        if (newError) {\n          uniqueErrors = {};\n          uniqueErrors[errMsg] = 1;\n          this.stats.uniqueErrors[msgType] = uniqueErrors;\n        } else {\n          uniqueErrors[errMsg] = uniqueErrors[errMsg] + 1 || 1;\n        }\n\n        this.stats.validationErrors[msgType] = this.stats.validationErrors[msgType] + 1 || 1;\n\n        if (newError && this.options.invalidCallback) {\n          this.options.invalidCallback(msgType, e, msg);\n        }\n      } else {\n        throw e;\n      }\n    }\n  }\n\n  // Update our state machine to the next state\n  runTransition(msg, msgType) {\n    const validTransitions = TransitionTable[this.state];\n\n    if (validTransitions === undefined) {\n      throw Error(`State: ${this.state} does not have any transitions`);\n    }\n\n    let nextState = validTransitions[msgType];\n    if (typeof nextState === 'function') {\n      nextState = validTransitions[msgType](msg);\n    }\n\n    if (nextState === undefined) {\n      this.stats.stateErrors[this.state] = `While in ${\n        this.state\n      } state, cannot accept message ${msgType}`;\n    } else {\n      this.state = nextState;\n    }\n  }\n\n  resetState() {\n    this.stats = {\n      messages: {},\n      validationErrors: {},\n      uniqueErrors: {},\n      stateErrors: {}\n    };\n    this.lastMessage = null;\n  }\n}\n"],"mappings":"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"}